{
	"id": "83f9a5b1209f82a69995cbbd72299b97",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PlayerDetails.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @title Player Details\n * @dev Stores player's level and experience\n */\ncontract PlayerDetails {\n    address owner;\n    uint public level;\n    uint public exp;\n    uint public constant maxLevel = 100;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only the owner can perform this action\");\n        _;\n    }\n\n    constructor() public {\n        owner = msg.sender;\n        level = 1;\n        exp = 0;\n    }\n\n    /**\n     * @dev Increases the player's experience by a given amount\n     * @param _exp The amount of experience to add\n     */\n    function addExperience(uint _exp) public onlyOwner {\n        exp += _exp;\n        _updateLevel();\n    }\n\n    /**\n     * @dev Updates the player's level based on the current experience\n     */\n    function _updateLevel() internal {\n        while (exp >= requiredExpForNextLevel() && level < maxLevel) {\n            exp -= requiredExpForNextLevel();\n            level++;\n        }\n    }\n\n    /**\n     * @dev Returns the experience required for the next level\n     * @return The required experience for next level\n     */\n    function requiredExpForNextLevel() public view returns (uint) {\n        return level * 100;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/PlayerDetails.sol": {
				"PlayerDetails": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_exp",
									"type": "uint256"
								}
							],
							"name": "addExperience",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "exp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "level",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maxLevel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "requiredExpForNextLevel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Stores player's level and experience",
						"methods": {
							"addExperience(uint256)": {
								"details": "Increases the player's experience by a given amount",
								"params": {
									"_exp": "The amount of experience to add"
								}
							},
							"requiredExpForNextLevel()": {
								"details": "Returns the experience required for the next level",
								"return": "The required experience for next level"
							}
						},
						"title": "Player Details"
					},
					"evm": {
						"assembly": "    /* \"contracts/PlayerDetails.sol\":103:1213  contract PlayerDetails {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PlayerDetails.sol\":362:454  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/PlayerDetails.sol\":362:454  constructor() public {... */\n  pop\n    /* \"contracts/PlayerDetails.sol\":401:411  msg.sender */\n  caller\n    /* \"contracts/PlayerDetails.sol\":393:398  owner */\n  0x00\n  dup1\n    /* \"contracts/PlayerDetails.sol\":393:411  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PlayerDetails.sol\":429:430  1 */\n  0x01\n    /* \"contracts/PlayerDetails.sol\":421:426  level */\n  dup1\n    /* \"contracts/PlayerDetails.sol\":421:430  level = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PlayerDetails.sol\":446:447  0 */\n  0x00\n    /* \"contracts/PlayerDetails.sol\":440:443  exp */\n  0x02\n    /* \"contracts/PlayerDetails.sol\":440:447  exp = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PlayerDetails.sol\":103:1213  contract PlayerDetails {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PlayerDetails.sol\":103:1213  contract PlayerDetails {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/PlayerDetails.sol\":103:1213  contract PlayerDetails {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x04a6f9e0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6fd5ae15\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xab60ffda\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc37c3555\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xcc06c359\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PlayerDetails.sol\":1114:1211  function requiredExpForNextLevel() public view returns (uint) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PlayerDetails.sol\":151:168  uint public level */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PlayerDetails.sol\":174:189  uint public exp */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PlayerDetails.sol\":591:694  function addExperience(uint _exp) public onlyOwner {... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"contracts/PlayerDetails.sol\":591:694  function addExperience(uint _exp) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/PlayerDetails.sol\":195:230  uint public constant maxLevel = 100 */\n    tag_7:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PlayerDetails.sol\":1114:1211  function requiredExpForNextLevel() public view returns (uint) {... */\n    tag_9:\n        /* \"contracts/PlayerDetails.sol\":1170:1174  uint */\n      0x00\n        /* \"contracts/PlayerDetails.sol\":1201:1204  100 */\n      0x64\n        /* \"contracts/PlayerDetails.sol\":1193:1198  level */\n      sload(0x01)\n        /* \"contracts/PlayerDetails.sol\":1193:1204  level * 100 */\n      mul\n        /* \"contracts/PlayerDetails.sol\":1186:1204  return level * 100 */\n      swap1\n      pop\n        /* \"contracts/PlayerDetails.sol\":1114:1211  function requiredExpForNextLevel() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PlayerDetails.sol\":151:168  uint public level */\n    tag_11:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/PlayerDetails.sol\":174:189  uint public exp */\n    tag_13:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/PlayerDetails.sol\":591:694  function addExperience(uint _exp) public onlyOwner {... */\n    tag_16:\n        /* \"contracts/PlayerDetails.sol\":290:295  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PlayerDetails.sol\":276:295  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PlayerDetails.sol\":276:286  msg.sender */\n      caller\n        /* \"contracts/PlayerDetails.sol\":276:295  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PlayerDetails.sol\":268:338  require(msg.sender == owner, \"Only the owner can perform this action\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/PlayerDetails.sol\":659:663  _exp */\n      dup1\n        /* \"contracts/PlayerDetails.sol\":652:655  exp */\n      0x02\n      0x00\n        /* \"contracts/PlayerDetails.sol\":652:663  exp += _exp */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PlayerDetails.sol\":673:687  _updateLevel() */\n      tag_23\n        /* \"contracts/PlayerDetails.sol\":673:685  _updateLevel */\n      tag_24\n        /* \"contracts/PlayerDetails.sol\":673:687  _updateLevel() */\n      jump\t// in\n    tag_23:\n        /* \"contracts/PlayerDetails.sol\":591:694  function addExperience(uint _exp) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PlayerDetails.sol\":195:230  uint public constant maxLevel = 100 */\n    tag_18:\n        /* \"contracts/PlayerDetails.sol\":227:230  100 */\n      0x64\n        /* \"contracts/PlayerDetails.sol\":195:230  uint public constant maxLevel = 100 */\n      dup2\n      jump\t// out\n        /* \"contracts/PlayerDetails.sol\":787:975  function _updateLevel() internal {... */\n    tag_24:\n        /* \"contracts/PlayerDetails.sol\":830:969  while (exp >= requiredExpForNextLevel() && level < maxLevel) {... */\n    tag_26:\n        /* \"contracts/PlayerDetails.sol\":844:869  requiredExpForNextLevel() */\n      tag_28\n        /* \"contracts/PlayerDetails.sol\":844:867  requiredExpForNextLevel */\n      tag_9\n        /* \"contracts/PlayerDetails.sol\":844:869  requiredExpForNextLevel() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/PlayerDetails.sol\":837:840  exp */\n      sload(0x02)\n        /* \"contracts/PlayerDetails.sol\":837:869  exp >= requiredExpForNextLevel() */\n      lt\n      iszero\n        /* \"contracts/PlayerDetails.sol\":837:889  exp >= requiredExpForNextLevel() && level < maxLevel */\n      dup1\n      iszero\n      tag_29\n      jumpi\n      pop\n        /* \"contracts/PlayerDetails.sol\":227:230  100 */\n      0x64\n        /* \"contracts/PlayerDetails.sol\":873:878  level */\n      sload(0x01)\n        /* \"contracts/PlayerDetails.sol\":873:889  level < maxLevel */\n      lt\n        /* \"contracts/PlayerDetails.sol\":837:889  exp >= requiredExpForNextLevel() && level < maxLevel */\n    tag_29:\n        /* \"contracts/PlayerDetails.sol\":830:969  while (exp >= requiredExpForNextLevel() && level < maxLevel) {... */\n      iszero\n      tag_27\n      jumpi\n        /* \"contracts/PlayerDetails.sol\":912:937  requiredExpForNextLevel() */\n      tag_30\n        /* \"contracts/PlayerDetails.sol\":912:935  requiredExpForNextLevel */\n      tag_9\n        /* \"contracts/PlayerDetails.sol\":912:937  requiredExpForNextLevel() */\n      jump\t// in\n    tag_30:\n        /* \"contracts/PlayerDetails.sol\":905:908  exp */\n      0x02\n      0x00\n        /* \"contracts/PlayerDetails.sol\":905:937  exp -= requiredExpForNextLevel() */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PlayerDetails.sol\":951:956  level */\n      0x01\n      0x00\n        /* \"contracts/PlayerDetails.sol\":951:958  level++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/PlayerDetails.sol\":830:969  while (exp >= requiredExpForNextLevel() && level < maxLevel) {... */\n      jump(tag_26)\n    tag_27:\n        /* \"contracts/PlayerDetails.sol\":787:975  function _updateLevel() internal {... */\n      jump\t// out\n    stop\n    data_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5 4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e\n\n    auxdata: 0xa265627a7a72315820823bdc3ca5410ae98b73132fdaf0a02e2e740613b31fbcd94f27f733f4a43cfa64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018081905550600060028190555061028c8061006f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304a6f9e01461005c5780636fd5ae151461007a578063ab60ffda14610098578063c37c3555146100b6578063cc06c359146100e4575b600080fd5b610064610102565b6040518082815260200191505060405180910390f35b61008261010f565b6040518082815260200191505060405180910390f35b6100a0610115565b6040518082815260200191505060405180910390f35b6100e2600480360360208110156100cc57600080fd5b810190808035906020019092919050505061011b565b005b6100ec6101db565b6040518082815260200191505060405180910390f35b6000606460015402905090565b60015481565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806102326026913960400191505060405180910390fd5b806002600082825401925050819055506101d86101e0565b50565b606481565b5b6101e9610102565b600254101580156101fc57506064600154105b1561022f57610209610102565b6002600082825403925050819055506001600081548092919060010191905055506101e1565b56fe4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6ea265627a7a72315820823bdc3ca5410ae98b73132fdaf0a02e2e740613b31fbcd94f27f733f4a43cfa64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x28C DUP1 PUSH2 0x6F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A6F9E0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6FD5AE15 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xAB60FFDA EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xC37C3555 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xCC06C359 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x1 SLOAD MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x232 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D8 PUSH2 0x1E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST JUMPDEST PUSH2 0x1E9 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x2 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x1FC JUMPI POP PUSH1 0x64 PUSH1 0x1 SLOAD LT JUMPDEST ISZERO PUSH2 0x22F JUMPI PUSH2 0x209 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1E1 JUMP JUMPDEST JUMP INVALID 0x4F PUSH15 0x6C7920746865206F776E6572206361 PUSH15 0x20706572666F726D20746869732061 PUSH4 0x74696F6E LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP3 EXTCODESIZE 0xDC EXTCODECOPY 0xA5 COINBASE EXP 0xE9 DUP12 PUSH20 0x132FDAF0A02E2E740613B31FBCD94F27F733F4A4 EXTCODECOPY STATICCALL PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "103:1110:0:-;;;362:92;8:9:-1;5:2;;;30:1;27;20:12;5:2;362:92:0;401:10;393:5;;:18;;;;;;;;;;;;;;;;;;429:1;421:5;:9;;;;446:1;440:3;:7;;;;103:1110;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806304a6f9e01461005c5780636fd5ae151461007a578063ab60ffda14610098578063c37c3555146100b6578063cc06c359146100e4575b600080fd5b610064610102565b6040518082815260200191505060405180910390f35b61008261010f565b6040518082815260200191505060405180910390f35b6100a0610115565b6040518082815260200191505060405180910390f35b6100e2600480360360208110156100cc57600080fd5b810190808035906020019092919050505061011b565b005b6100ec6101db565b6040518082815260200191505060405180910390f35b6000606460015402905090565b60015481565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806102326026913960400191505060405180910390fd5b806002600082825401925050819055506101d86101e0565b50565b606481565b5b6101e9610102565b600254101580156101fc57506064600154105b1561022f57610209610102565b6002600082825403925050819055506001600081548092919060010191905055506101e1565b56fe4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6ea265627a7a72315820823bdc3ca5410ae98b73132fdaf0a02e2e740613b31fbcd94f27f733f4a43cfa64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A6F9E0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6FD5AE15 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xAB60FFDA EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xC37C3555 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xCC06C359 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x1 SLOAD MUL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x232 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D8 PUSH2 0x1E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST JUMPDEST PUSH2 0x1E9 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x2 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x1FC JUMPI POP PUSH1 0x64 PUSH1 0x1 SLOAD LT JUMPDEST ISZERO PUSH2 0x22F JUMPI PUSH2 0x209 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1E1 JUMP JUMPDEST JUMP INVALID 0x4F PUSH15 0x6C7920746865206F776E6572206361 PUSH15 0x20706572666F726D20746869732061 PUSH4 0x74696F6E LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP3 EXTCODESIZE 0xDC EXTCODECOPY 0xA5 COINBASE EXP 0xE9 DUP12 PUSH20 0x132FDAF0A02E2E740613B31FBCD94F27F733F4A4 EXTCODECOPY STATICCALL PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "103:1110:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;103:1110:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1114:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;151:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;174:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;591:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;591:103:0;;;;;;;;;;;;;;;;;:::i;:::-;;195:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1114:97;1170:4;1201:3;1193:5;;:11;1186:18;;1114:97;:::o;151:17::-;;;;:::o;174:15::-;;;;:::o;591:103::-;290:5;;;;;;;;;;;276:19;;:10;:19;;;268:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:4;652:3;;:11;;;;;;;;;;;673:14;:12;:14::i;:::-;591:103;:::o;195:35::-;227:3;195:35;:::o;787:188::-;830:139;844:25;:23;:25::i;:::-;837:3;;:32;;:52;;;;;227:3;873:5;;:16;837:52;830:139;;;912:25;:23;:25::i;:::-;905:3;;:32;;;;;;;;;;;951:5;;:7;;;;;;;;;;;;;830:139;;;787:188::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130400",
								"executionCost": "46071",
								"totalCost": "176471"
							},
							"external": {
								"addExperience(uint256)": "infinite",
								"exp()": "1027",
								"level()": "1005",
								"maxLevel()": "271",
								"requiredExpForNextLevel()": "999"
							},
							"internal": {
								"_updateLevel()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 103,
									"end": 1213,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "MSTORE"
								},
								{
									"begin": 362,
									"end": 454,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 362,
									"end": 454,
									"name": "POP"
								},
								{
									"begin": 401,
									"end": 411,
									"name": "CALLER"
								},
								{
									"begin": 393,
									"end": 398,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 393,
									"end": 398,
									"name": "DUP1"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "EXP"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "DUP2"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "SLOAD"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "DUP2"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "MUL"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "NOT"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "AND"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "SWAP1"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "DUP4"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "AND"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "MUL"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "OR"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "SWAP1"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "SSTORE"
								},
								{
									"begin": 393,
									"end": 411,
									"name": "POP"
								},
								{
									"begin": 429,
									"end": 430,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 421,
									"end": 426,
									"name": "DUP1"
								},
								{
									"begin": 421,
									"end": 430,
									"name": "DUP2"
								},
								{
									"begin": 421,
									"end": 430,
									"name": "SWAP1"
								},
								{
									"begin": 421,
									"end": 430,
									"name": "SSTORE"
								},
								{
									"begin": 421,
									"end": 430,
									"name": "POP"
								},
								{
									"begin": 446,
									"end": 447,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 440,
									"end": 443,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 440,
									"end": 447,
									"name": "DUP2"
								},
								{
									"begin": 440,
									"end": 447,
									"name": "SWAP1"
								},
								{
									"begin": 440,
									"end": 447,
									"name": "SSTORE"
								},
								{
									"begin": 440,
									"end": 447,
									"name": "POP"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "DUP1"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "CODECOPY"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 103,
									"end": 1213,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820823bdc3ca5410ae98b73132fdaf0a02e2e740613b31fbcd94f27f733f4a43cfa64736f6c63430005110032",
									".code": [
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "MSTORE"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "POP"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "LT"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "SHR"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "4A6F9E0"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "EQ"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "6FD5AE15"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "EQ"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "AB60FFDA"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "EQ"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "C37C3555"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "EQ"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "CC06C359"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "EQ"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "JUMPI"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "JUMPDEST"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "DUP1"
										},
										{
											"begin": 103,
											"end": 1213,
											"name": "REVERT"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "JUMPDEST"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "JUMPDEST"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "MLOAD"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "DUP1"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "DUP3"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "MSTORE"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "SWAP2"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "POP"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "POP"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "MLOAD"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "DUP1"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "SWAP2"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "SUB"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "RETURN"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "DUP3"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "MSTORE"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "ADD"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "SWAP2"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "POP"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "MLOAD"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "SWAP2"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "SUB"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "SWAP1"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "RETURN"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "DUP3"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "MSTORE"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "ADD"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "POP"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "MLOAD"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "DUP1"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "SWAP2"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "SUB"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "SWAP1"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "RETURN"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "ADD"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "ADD"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "SWAP3"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "SWAP2"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "STOP"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "MLOAD"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "DUP1"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "DUP3"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "MSTORE"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "ADD"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "SWAP2"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "MLOAD"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "DUP1"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "SWAP2"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "SUB"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "SWAP1"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "RETURN"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "JUMPDEST"
										},
										{
											"begin": 1170,
											"end": 1174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "SLOAD"
										},
										{
											"begin": 1193,
											"end": 1204,
											"name": "MUL"
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "POP"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1211,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "SLOAD"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "DUP2"
										},
										{
											"begin": 151,
											"end": 168,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "SLOAD"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "DUP2"
										},
										{
											"begin": 174,
											"end": 189,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "SLOAD"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "EXP"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DIV"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 276,
											"end": 286,
											"name": "CALLER"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "EQ"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMPI"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "MLOAD"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP2"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "MSTORE"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "ADD"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "ADD"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP3"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP2"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "SUB"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP3"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "MSTORE"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP2"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "MSTORE"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "ADD"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH data",
											"value": "2A1CB988FFFA75DAB1F18F6E33D352B421B15B8203FB8B7F8559967FD8DE80E5"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "SWAP2"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "CODECOPY"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "ADD"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "SWAP2"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "MLOAD"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "SWAP2"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "SUB"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "SWAP1"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "REVERT"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 268,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 652,
											"end": 655,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 652,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "DUP3"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "DUP3"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "SLOAD"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "SWAP3"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "POP"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "POP"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "SWAP1"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "SSTORE"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "POP"
										},
										{
											"begin": 673,
											"end": 687,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 673,
											"end": 685,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 673,
											"end": 687,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 673,
											"end": 687,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 673,
											"end": 687,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 230,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 195,
											"end": 230,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 787,
											"end": 975,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 787,
											"end": 975,
											"name": "JUMPDEST"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "JUMPDEST"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 844,
											"end": 867,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "JUMPDEST"
										},
										{
											"begin": 837,
											"end": 840,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 837,
											"end": 840,
											"name": "SLOAD"
										},
										{
											"begin": 837,
											"end": 869,
											"name": "LT"
										},
										{
											"begin": 837,
											"end": 869,
											"name": "ISZERO"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "ISZERO"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "JUMPI"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 230,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "SLOAD"
										},
										{
											"begin": 873,
											"end": 889,
											"name": "LT"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "ISZERO"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "JUMPI"
										},
										{
											"begin": 912,
											"end": 937,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 912,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 912,
											"end": 937,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 912,
											"end": 937,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 912,
											"end": 937,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 908,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 905,
											"end": 908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "DUP3"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "DUP3"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SLOAD"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SUB"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SWAP3"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "POP"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "POP"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "DUP2"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SWAP1"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "SSTORE"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 956,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 951,
											"end": 956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "DUP2"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SLOAD"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "DUP1"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP3"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SSTORE"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "JUMP"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 830,
											"end": 969,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 975,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"2A1CB988FFFA75DAB1F18F6E33D352B421B15B8203FB8B7F8559967FD8DE80E5": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addExperience(uint256)": "c37c3555",
							"exp()": "ab60ffda",
							"level()": "6fd5ae15",
							"maxLevel()": "cc06c359",
							"requiredExpForNextLevel()": "04a6f9e0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exp\",\"type\":\"uint256\"}],\"name\":\"addExperience\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiredExpForNextLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Stores player's level and experience\",\"methods\":{\"addExperience(uint256)\":{\"details\":\"Increases the player's experience by a given amount\",\"params\":{\"_exp\":\"The amount of experience to add\"}},\"requiredExpForNextLevel()\":{\"details\":\"Returns the experience required for the next level\",\"return\":\"The required experience for next level\"}},\"title\":\"Player Details\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/PlayerDetails.sol\":\"PlayerDetails\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PlayerDetails.sol\":{\"keccak256\":\"0x6f246e485fa2ec4ccb1bf551ece11337dc8dd40654916e3f75eb9d3deea6445d\",\"urls\":[\"bzz-raw://de52c8e6b6d41733c67d773164371adf05c100b3372b5ddf51b6aa7daada9bfa\",\"dweb:/ipfs/QmaBtU5HcmVDGNQhFL2r1RnNwWUUt3e9HEyaNhVBoQv34n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/PlayerDetails.sol:PlayerDetails",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/PlayerDetails.sol:PlayerDetails",
								"label": "level",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/PlayerDetails.sol:PlayerDetails",
								"label": "exp",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/PlayerDetails.sol": {
				"ast": {
					"absolutePath": "contracts/PlayerDetails.sol",
					"exportedSymbols": {
						"PlayerDetails": [
							87
						]
					},
					"id": 88,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Player Details\n@dev Stores player's level and experience",
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "PlayerDetails",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "132:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "132:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "level",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "151:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "151:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "exp",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "174:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "174:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 10,
									"name": "maxLevel",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "195:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "195:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "227:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "258:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "276:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "276:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 15,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "290:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "276:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "297:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5",
																"typeString": "literal_string \"Only the owner can perform this action\""
															},
															"value": "Only the owner can perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5",
																"typeString": "literal_string \"Only the owner can perform this action\""
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															105,
															106
														],
														"referencedDeclaration": 106,
														"src": "268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "268:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "268:70:0"
											},
											{
												"id": 20,
												"nodeType": "PlaceholderStatement",
												"src": "348:1:0"
											}
										]
									},
									"documentation": null,
									"id": 22,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "255:2:0"
									},
									"src": "237:119:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "383:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "393:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "401:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "393:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "393:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 30,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "421:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "421:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "421:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 34,
														"name": "exp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "440:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "446:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "440:7:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "383:0:0"
									},
									"scope": 87,
									"src": "362:92:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "642:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "exp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "652:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "_exp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "659:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "652:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "652:11:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 50,
														"name": "_updateLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "673:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "673:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "673:14:0"
											}
										]
									},
									"documentation": "@dev Increases the player's experience by a given amount\n@param _exp The amount of experience to add",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 44,
											"modifierName": {
												"argumentTypes": null,
												"id": 43,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 22,
												"src": "632:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "632:9:0"
										}
									],
									"name": "addExperience",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "_exp",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "614:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "613:11:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:0"
									},
									"scope": 87,
									"src": "591:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "820:155:0",
										"statements": [
											{
												"body": {
													"id": 73,
													"nodeType": "Block",
													"src": "891:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 65,
																	"name": "exp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "905:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 66,
																		"name": "requiredExpForNextLevel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "912:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "912:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "905:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 69,
															"nodeType": "ExpressionStatement",
															"src": "905:32:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "951:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 70,
																	"name": "level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "951:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 72,
															"nodeType": "ExpressionStatement",
															"src": "951:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 57,
															"name": "exp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "837:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 58,
																"name": "requiredExpForNextLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "844:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "837:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 61,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "873:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 62,
															"name": "maxLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "881:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "873:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "837:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 74,
												"nodeType": "WhileStatement",
												"src": "830:139:0"
											}
										]
									},
									"documentation": "@dev Updates the player's level based on the current experience",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateLevel",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:0:0"
									},
									"scope": 87,
									"src": "787:188:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1176:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1193:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "313030",
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1201:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1193:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 84,
												"nodeType": "Return",
												"src": "1186:18:0"
											}
										]
									},
									"documentation": "@dev Returns the experience required for the next level\n@return The required experience for next level",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requiredExpForNextLevel",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1146:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:6:0"
									},
									"scope": 87,
									"src": "1114:97:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 88,
							"src": "103:1110:0"
						}
					],
					"src": "0:1214:0"
				},
				"id": 0
			}
		}
	}
}