{
	"id": "e96bfd4beeb12c46b574923a9f61c2fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Monk.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"./ERC20.sol\"; \r\n\r\n/**\r\n * @title Monk\r\n * @dev Monk is the ERC20 token used for Monkey Brothers\r\n */\r\ncontract Monk is ERC20(\"MONK\", \"MK\") {\r\n    uint256 supplyLimit;\r\n    uint256 currentSupply;\r\n    address owner;\r\n    \r\n    /**\r\n     * @dev Sets the values for owner of the contract and supply limit\r\n     */\r\n    constructor() {\r\n        owner = msg.sender;\r\n        supplyLimit = 1000000 * 1000000000000000000;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints Monks with ETH\r\n     */\r\n    function getMonks() public payable {\r\n        uint256 amt = msg.value * 1000;\r\n        require(totalSupply() + amt < supplyLimit, \"Warning: Insufficient Monks!\");\r\n        _mint(msg.sender, amt);\r\n    }\r\n\r\n    /**\r\n     * @dev Getter for amount of Monks held by the caller of the function\r\n     */\r\n    function checkMonks() public view returns (uint256) {\r\n        return balanceOf(msg.sender) / 1000000000000000000;\r\n    }\r\n\r\n    /**\r\n     * @dev Getter for amount of Monks held by an address\r\n     * @param user Address of user of interest\r\n     */\r\n    function checkMonksOf(address user) public view returns (uint256) {\r\n        return balanceOf(user) / 1000000000000000000;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer Monks from function caller to recipient\r\n     * @param recipient Address of recipient\r\n     * @param value Amount of Monks to transfer\r\n     */\r\n    function transferMonks(address recipient, uint256 value) public returns (bool) {\r\n        return transfer(recipient, value * 1000000000000000000);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer Monks from an address to another address\r\n     * @param from Address of sender\r\n     * @param to Address of recipient\r\n     * @param amt Amount of Monks to transfer\r\n     */\r\n    function transferMonksFrom(address from, address to, uint256 amt) public {\r\n        require(allowance(from, msg.sender) > amt * 1000000000000000000, \"Warning: You are not allowed to transfer!\");\r\n        transferFrom(from, to, amt * 1000000000000000000);\r\n    }\r\n\r\n    /**\r\n     * @dev Give an address approval to transfer a specified amount of Monks\r\n     * @param recipient Address to be given approval\r\n     * @param amt Amount of Monks to be approved to the address\r\n     */\r\n    function giveMonkApproval(address recipient, uint256 amt) public {\r\n        approve(recipient, amt * 1000000000000000000);\r\n    }\r\n\r\n    /**\r\n     * @dev Check allowance given to spender by the user\r\n     * @param user Address of the owner of the Monks\r\n     * @param spender Address of the spender of the Monks\r\n     */\r\n    function checkMonkAllowance(address user, address spender) public view returns (uint256) {\r\n        return allowance(user, spender) / 1000000000000000000;\r\n    }\r\n\r\n    /**\r\n     * @dev Track current total Monk supply\r\n     */\r\n    function currentMonkSupply() public view returns (uint256) {\r\n        return totalSupply() / 1000000000000000000;\r\n    }\r\n}"
			},
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\r\nimport {Context} from \"./utils/Context.sol\";\r\nimport {IERC20Errors} from \"./extensions/IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC-20\r\n * applications.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\r\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     *\r\n     * ```solidity\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance < type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/extensions/IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC-20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}"
			},
			"contracts/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xcb1217f4704c78ca1ab427365d02d3ac328b8214296c72034decad9c8b309e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcdbe3bc4811f401e6d9ea73a9156819b2340b71d5a392b20b4e80d3d3dfe2e1\",\"dweb:/ipfs/QmbWDnKhu5Ki3t4qRt75VtUmXia5bM2tfWLqrVxbtFqTZd\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x07a0f490fb568d855f744f8a8ed8b68b523c28c64e230e9816921ade79cf1b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://727deb9ceacb88c9c6d0e69120965d33c3fd96e7e04818f8bf099c5ac7714cfb\",\"dweb:/ipfs/QmR1HA8s3UgC82Wmu7dPjrHzXschsoDHqwyuDJTRtxey4D\"]},\"contracts/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xa2df86d1c45d3de3dc5a17f00bc956b9f4bebdd0d81d974f71fd4e2b5523a2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b069590eba176e9c5c8f46536e44ccf53f6ac572b7fd8ef9f700b9affdd37cf1\",\"dweb:/ipfs/QmX1REaUcDPpySSt6yCxgZAX3NhHnoZ8wMkHxPrc6bNkLz\"]},\"contracts/extensions/IERC6093.sol\":{\"keccak256\":\"0x44a20c8f55f317f1f72a8073b7aff8906a4fb67e0432e7c00f64caaf234de936\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0dd61fbb79fd9593bcd53e7d100165fce97dacdc93cbe3bc42d8c1023f3c238\",\"dweb:/ipfs/QmWYeyMXK4rqGzKUMN5gBdXByFrrYMaY8azu45bmeddn4C\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 28,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 30,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 34,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x07a0f490fb568d855f744f8a8ed8b68b523c28c64e230e9816921ade79cf1b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://727deb9ceacb88c9c6d0e69120965d33c3fd96e7e04818f8bf099c5ac7714cfb\",\"dweb:/ipfs/QmR1HA8s3UgC82Wmu7dPjrHzXschsoDHqwyuDJTRtxey4D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Monk.sol": {
				"Monk": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "checkMonkAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkMonks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "checkMonksOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonkSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMonks",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "giveMonkApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferMonks",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "transferMonksFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Monk is the ERC20 token used for Monkey Brothers",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"checkMonkAllowance(address,address)": {
								"details": "Check allowance given to spender by the user",
								"params": {
									"spender": "Address of the spender of the Monks",
									"user": "Address of the owner of the Monks"
								}
							},
							"checkMonks()": {
								"details": "Getter for amount of Monks held by the caller of the function"
							},
							"checkMonksOf(address)": {
								"details": "Getter for amount of Monks held by an address",
								"params": {
									"user": "Address of user of interest"
								}
							},
							"constructor": {
								"details": "Sets the values for owner of the contract and supply limit"
							},
							"currentMonkSupply()": {
								"details": "Track current total Monk supply"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getMonks()": {
								"details": "Mints Monks with ETH"
							},
							"giveMonkApproval(address,uint256)": {
								"details": "Give an address approval to transfer a specified amount of Monks",
								"params": {
									"amt": "Amount of Monks to be approved to the address",
									"recipient": "Address to be given approval"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferMonks(address,uint256)": {
								"details": "Transfer Monks from function caller to recipient",
								"params": {
									"recipient": "Address of recipient",
									"value": "Amount of Monks to transfer"
								}
							},
							"transferMonksFrom(address,address,uint256)": {
								"details": "Transfer Monks from an address to another address",
								"params": {
									"amt": "Amount of Monks to transfer",
									"from": "Address of sender",
									"to": "Address of recipient"
								}
							}
						},
						"title": "Monk",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Monk.sol\":171:2950  contract Monk is ERC20(\"MONK\", \"MK\") {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Monk.sol\":385:490  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ERC20.sol\":1631:1747  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4f4e4b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4b000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/ERC20.sol\":1706:1711  name_ */\n  dup2\n    /* \"contracts/ERC20.sol\":1698:1703  _name */\n  0x03\n    /* \"contracts/ERC20.sol\":1698:1711  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/ERC20.sol\":1732:1739  symbol_ */\n  dup1\n    /* \"contracts/ERC20.sol\":1722:1729  _symbol */\n  0x04\n    /* \"contracts/ERC20.sol\":1722:1739  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/ERC20.sol\":1631:1747  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Monk.sol\":418:428  msg.sender */\n  caller\n    /* \"contracts/Monk.sol\":410:415  owner */\n  0x07\n  0x00\n    /* \"contracts/Monk.sol\":410:428  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Monk.sol\":453:482  1000000 * 1000000000000000000 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/Monk.sol\":439:450  supplyLimit */\n  0x05\n    /* \"contracts/Monk.sol\":439:482  supplyLimit = 1000000 * 1000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Monk.sol\":171:2950  contract Monk is ERC20(\"MONK\", \"MK\") {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Monk.sol\":171:2950  contract Monk is ERC20(\"MONK\", \"MK\") {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Monk.sol\":171:2950  contract Monk is ERC20(\"MONK\", \"MK\") {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x450bcf40\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb1609967\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd4721d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf107079d\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x450bcf40\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9f847091\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x3042dbe8\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3042dbe8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30b67a99\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x44f0f068\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":1817:1908  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4110:4300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2919:3018  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4910:5159  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":2595:2756  function checkMonkAllowance(address user, address spender) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":1419:1572  function transferMonks(address recipient, uint256 value) public returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2770:2854  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":2827:2947  function currentMonkSupply() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":2269:2398  function giveMonkApproval(address recipient, uint256 amt) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/ERC20.sol\":3081:3199  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2027:2122  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":1107:1236  function checkMonksOf(address user) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3404:3586  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":853:974  function checkMonks() public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":1785:2046  function transferMonksFrom(address from, address to, uint256 amt) public {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/ERC20.sol\":3649:3791  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Monk.sol\":550:752  function getMonks() public payable {... */\n    tag_18:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/ERC20.sol\":1817:1908  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"contracts/ERC20.sol\":1862:1875  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":1895:1900  _name */\n      0x03\n        /* \"contracts/ERC20.sol\":1888:1900  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1817:1908  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4110:4300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"contracts/ERC20.sol\":4183:4187  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4200:4213  address owner */\n      dup1\n        /* \"contracts/ERC20.sol\":4216:4228  _msgSender() */\n      tag_112\n        /* \"contracts/ERC20.sol\":4216:4226  _msgSender */\n      tag_113\n        /* \"contracts/ERC20.sol\":4216:4228  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC20.sol\":4200:4228  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4239:4270  _approve(owner, spender, value) */\n      tag_114\n        /* \"contracts/ERC20.sol\":4248:4253  owner */\n      dup2\n        /* \"contracts/ERC20.sol\":4255:4262  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":4264:4269  value */\n      dup6\n        /* \"contracts/ERC20.sol\":4239:4247  _approve */\n      tag_115\n        /* \"contracts/ERC20.sol\":4239:4270  _approve(owner, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/ERC20.sol\":4288:4292  true */\n      0x01\n        /* \"contracts/ERC20.sol\":4281:4292  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":4110:4300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2919:3018  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"contracts/ERC20.sol\":2971:2978  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":2998:3010  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ERC20.sol\":2991:3010  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2919:3018  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4910:5159  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"contracts/ERC20.sol\":4997:5001  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":5014:5029  address spender */\n      dup1\n        /* \"contracts/ERC20.sol\":5032:5044  _msgSender() */\n      tag_118\n        /* \"contracts/ERC20.sol\":5032:5042  _msgSender */\n      tag_113\n        /* \"contracts/ERC20.sol\":5032:5044  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC20.sol\":5014:5044  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5055:5092  _spendAllowance(from, spender, value) */\n      tag_119\n        /* \"contracts/ERC20.sol\":5071:5075  from */\n      dup6\n        /* \"contracts/ERC20.sol\":5077:5084  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":5086:5091  value */\n      dup6\n        /* \"contracts/ERC20.sol\":5055:5070  _spendAllowance */\n      tag_120\n        /* \"contracts/ERC20.sol\":5055:5092  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/ERC20.sol\":5103:5129  _transfer(from, to, value) */\n      tag_121\n        /* \"contracts/ERC20.sol\":5113:5117  from */\n      dup6\n        /* \"contracts/ERC20.sol\":5119:5121  to */\n      dup6\n        /* \"contracts/ERC20.sol\":5123:5128  value */\n      dup6\n        /* \"contracts/ERC20.sol\":5103:5112  _transfer */\n      tag_122\n        /* \"contracts/ERC20.sol\":5103:5129  _transfer(from, to, value) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ERC20.sol\":5147:5151  true */\n      0x01\n        /* \"contracts/ERC20.sol\":5140:5151  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":4910:5159  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Monk.sol\":2595:2756  function checkMonkAllowance(address user, address spender) public view returns (uint256) {... */\n    tag_49:\n        /* \"contracts/Monk.sol\":2675:2682  uint256 */\n      0x00\n        /* \"contracts/Monk.sol\":2729:2748  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":2702:2726  allowance(user, spender) */\n      tag_124\n        /* \"contracts/Monk.sol\":2712:2716  user */\n      dup5\n        /* \"contracts/Monk.sol\":2718:2725  spender */\n      dup5\n        /* \"contracts/Monk.sol\":2702:2711  allowance */\n      tag_100\n        /* \"contracts/Monk.sol\":2702:2726  allowance(user, spender) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Monk.sol\":2702:2748  allowance(user, spender) / 1000000000000000000 */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/Monk.sol\":2695:2748  return allowance(user, spender) / 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/Monk.sol\":2595:2756  function checkMonkAllowance(address user, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Monk.sol\":1419:1572  function transferMonks(address recipient, uint256 value) public returns (bool) {... */\n    tag_54:\n        /* \"contracts/Monk.sol\":1492:1496  bool */\n      0x00\n        /* \"contracts/Monk.sol\":1516:1564  transfer(recipient, value * 1000000000000000000) */\n      tag_128\n        /* \"contracts/Monk.sol\":1525:1534  recipient */\n      dup4\n        /* \"contracts/Monk.sol\":1544:1563  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":1536:1541  value */\n      dup5\n        /* \"contracts/Monk.sol\":1536:1563  value * 1000000000000000000 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/Monk.sol\":1516:1524  transfer */\n      tag_87\n        /* \"contracts/Monk.sol\":1516:1564  transfer(recipient, value * 1000000000000000000) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/Monk.sol\":1509:1564  return transfer(recipient, value * 1000000000000000000) */\n      swap1\n      pop\n        /* \"contracts/Monk.sol\":1419:1572  function transferMonks(address recipient, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2770:2854  function decimals() public view virtual returns (uint8) {... */\n    tag_58:\n        /* \"contracts/ERC20.sol\":2819:2824  uint8 */\n      0x00\n        /* \"contracts/ERC20.sol\":2844:2846  18 */\n      0x12\n        /* \"contracts/ERC20.sol\":2837:2846  return 18 */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2770:2854  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Monk.sol\":2827:2947  function currentMonkSupply() public view returns (uint256) {... */\n    tag_63:\n        /* \"contracts/Monk.sol\":2877:2884  uint256 */\n      0x00\n        /* \"contracts/Monk.sol\":2920:2939  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":2904:2917  totalSupply() */\n      tag_133\n        /* \"contracts/Monk.sol\":2904:2915  totalSupply */\n      tag_36\n        /* \"contracts/Monk.sol\":2904:2917  totalSupply() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/Monk.sol\":2904:2939  totalSupply() / 1000000000000000000 */\n      tag_134\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_134:\n        /* \"contracts/Monk.sol\":2897:2939  return totalSupply() / 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/Monk.sol\":2827:2947  function currentMonkSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Monk.sol\":2269:2398  function giveMonkApproval(address recipient, uint256 amt) public {... */\n    tag_68:\n        /* \"contracts/Monk.sol\":2345:2390  approve(recipient, amt * 1000000000000000000) */\n      tag_136\n        /* \"contracts/Monk.sol\":2353:2362  recipient */\n      dup3\n        /* \"contracts/Monk.sol\":2370:2389  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":2364:2367  amt */\n      dup4\n        /* \"contracts/Monk.sol\":2364:2389  amt * 1000000000000000000 */\n      tag_137\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_137:\n        /* \"contracts/Monk.sol\":2345:2352  approve */\n      tag_31\n        /* \"contracts/Monk.sol\":2345:2390  approve(recipient, amt * 1000000000000000000) */\n      jump\t// in\n    tag_136:\n      pop\n        /* \"contracts/Monk.sol\":2269:2398  function giveMonkApproval(address recipient, uint256 amt) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3081:3199  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_73:\n        /* \"contracts/ERC20.sol\":3146:3153  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3173:3182  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":3173:3191  _balances[account] */\n      0x00\n        /* \"contracts/ERC20.sol\":3183:3190  account */\n      dup4\n        /* \"contracts/ERC20.sol\":3173:3191  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3166:3191  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3081:3199  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2027:2122  function symbol() public view virtual returns (string memory) {... */\n    tag_77:\n        /* \"contracts/ERC20.sol\":2074:2087  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":2107:2114  _symbol */\n      0x04\n        /* \"contracts/ERC20.sol\":2100:2114  return _symbol */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_106\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_106\n      jump\t// in\n    tag_141:\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2027:2122  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Monk.sol\":1107:1236  function checkMonksOf(address user) public view returns (uint256) {... */\n    tag_82:\n        /* \"contracts/Monk.sol\":1164:1171  uint256 */\n      0x00\n        /* \"contracts/Monk.sol\":1209:1228  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":1191:1206  balanceOf(user) */\n      tag_146\n        /* \"contracts/Monk.sol\":1201:1205  user */\n      dup4\n        /* \"contracts/Monk.sol\":1191:1200  balanceOf */\n      tag_73\n        /* \"contracts/Monk.sol\":1191:1206  balanceOf(user) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/Monk.sol\":1191:1228  balanceOf(user) / 1000000000000000000 */\n      tag_147\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_147:\n        /* \"contracts/Monk.sol\":1184:1228  return balanceOf(user) / 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/Monk.sol\":1107:1236  function checkMonksOf(address user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3404:3586  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_87:\n        /* \"contracts/ERC20.sol\":3473:3477  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3490:3503  address owner */\n      dup1\n        /* \"contracts/ERC20.sol\":3506:3518  _msgSender() */\n      tag_149\n        /* \"contracts/ERC20.sol\":3506:3516  _msgSender */\n      tag_113\n        /* \"contracts/ERC20.sol\":3506:3518  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/ERC20.sol\":3490:3518  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3529:3556  _transfer(owner, to, value) */\n      tag_150\n        /* \"contracts/ERC20.sol\":3539:3544  owner */\n      dup2\n        /* \"contracts/ERC20.sol\":3546:3548  to */\n      dup6\n        /* \"contracts/ERC20.sol\":3550:3555  value */\n      dup6\n        /* \"contracts/ERC20.sol\":3529:3538  _transfer */\n      tag_122\n        /* \"contracts/ERC20.sol\":3529:3556  _transfer(owner, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/ERC20.sol\":3574:3578  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3567:3578  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":3404:3586  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Monk.sol\":853:974  function checkMonks() public view returns (uint256) {... */\n    tag_91:\n        /* \"contracts/Monk.sol\":896:903  uint256 */\n      0x00\n        /* \"contracts/Monk.sol\":947:966  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":923:944  balanceOf(msg.sender) */\n      tag_152\n        /* \"contracts/Monk.sol\":933:943  msg.sender */\n      caller\n        /* \"contracts/Monk.sol\":923:932  balanceOf */\n      tag_73\n        /* \"contracts/Monk.sol\":923:944  balanceOf(msg.sender) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Monk.sol\":923:966  balanceOf(msg.sender) / 1000000000000000000 */\n      tag_153\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_153:\n        /* \"contracts/Monk.sol\":916:966  return balanceOf(msg.sender) / 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/Monk.sol\":853:974  function checkMonks() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Monk.sol\":1785:2046  function transferMonksFrom(address from, address to, uint256 amt) public {... */\n    tag_96:\n        /* \"contracts/Monk.sol\":1913:1932  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":1907:1910  amt */\n      dup2\n        /* \"contracts/Monk.sol\":1907:1932  amt * 1000000000000000000 */\n      tag_155\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_155:\n        /* \"contracts/Monk.sol\":1877:1904  allowance(from, msg.sender) */\n      tag_156\n        /* \"contracts/Monk.sol\":1887:1891  from */\n      dup5\n        /* \"contracts/Monk.sol\":1893:1903  msg.sender */\n      caller\n        /* \"contracts/Monk.sol\":1877:1886  allowance */\n      tag_100\n        /* \"contracts/Monk.sol\":1877:1904  allowance(from, msg.sender) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/Monk.sol\":1877:1932  allowance(from, msg.sender) > amt * 1000000000000000000 */\n      gt\n        /* \"contracts/Monk.sol\":1869:1978  require(allowance(from, msg.sender) > amt * 1000000000000000000, \"Warning: You are not allowed to transfer!\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/Monk.sol\":1989:2038  transferFrom(from, to, amt * 1000000000000000000) */\n      tag_160\n        /* \"contracts/Monk.sol\":2002:2006  from */\n      dup4\n        /* \"contracts/Monk.sol\":2008:2010  to */\n      dup4\n        /* \"contracts/Monk.sol\":2018:2037  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Monk.sol\":2012:2015  amt */\n      dup5\n        /* \"contracts/Monk.sol\":2012:2037  amt * 1000000000000000000 */\n      tag_161\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_161:\n        /* \"contracts/Monk.sol\":1989:2001  transferFrom */\n      tag_43\n        /* \"contracts/Monk.sol\":1989:2038  transferFrom(from, to, amt * 1000000000000000000) */\n      jump\t// in\n    tag_160:\n      pop\n        /* \"contracts/Monk.sol\":1785:2046  function transferMonksFrom(address from, address to, uint256 amt) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3649:3791  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"contracts/ERC20.sol\":3729:3736  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":3756:3767  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":3756:3774  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":3768:3773  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":3756:3774  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":3756:3783  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":3775:3782  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":3756:3783  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3749:3783  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3649:3791  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Monk.sol\":550:752  function getMonks() public payable {... */\n    tag_103:\n        /* \"contracts/Monk.sol\":596:607  uint256 amt */\n      0x00\n        /* \"contracts/Monk.sol\":622:626  1000 */\n      0x03e8\n        /* \"contracts/Monk.sol\":610:619  msg.value */\n      callvalue\n        /* \"contracts/Monk.sol\":610:626  msg.value * 1000 */\n      tag_164\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_164:\n        /* \"contracts/Monk.sol\":596:626  uint256 amt = msg.value * 1000 */\n      swap1\n      pop\n        /* \"contracts/Monk.sol\":667:678  supplyLimit */\n      sload(0x05)\n        /* \"contracts/Monk.sol\":661:664  amt */\n      dup2\n        /* \"contracts/Monk.sol\":645:658  totalSupply() */\n      tag_165\n        /* \"contracts/Monk.sol\":645:656  totalSupply */\n      tag_36\n        /* \"contracts/Monk.sol\":645:658  totalSupply() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Monk.sol\":645:664  totalSupply() + amt */\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"contracts/Monk.sol\":645:678  totalSupply() + amt < supplyLimit */\n      lt\n        /* \"contracts/Monk.sol\":637:711  require(totalSupply() + amt < supplyLimit, \"Warning: Insufficient Monks!\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/Monk.sol\":722:744  _mint(msg.sender, amt) */\n      tag_171\n        /* \"contracts/Monk.sol\":728:738  msg.sender */\n      caller\n        /* \"contracts/Monk.sol\":740:743  amt */\n      dup3\n        /* \"contracts/Monk.sol\":722:727  _mint */\n      tag_172\n        /* \"contracts/Monk.sol\":722:744  _mint(msg.sender, amt) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Monk.sol\":585:752  {... */\n      pop\n        /* \"contracts/Monk.sol\":550:752  function getMonks() public payable {... */\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"contracts/utils/Context.sol\":725:732  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":745:762  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":8969:9099  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_115:\n        /* \"contracts/ERC20.sol\":9054:9091  _approve(owner, spender, value, true) */\n      tag_175\n        /* \"contracts/ERC20.sol\":9063:9068  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":9070:9077  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":9079:9084  value */\n      dup4\n        /* \"contracts/ERC20.sol\":9086:9090  true */\n      0x01\n        /* \"contracts/ERC20.sol\":9054:9062  _approve */\n      tag_176\n        /* \"contracts/ERC20.sol\":9054:9091  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ERC20.sol\":8969:9099  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":10701:11187  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_120:\n        /* \"contracts/ERC20.sol\":10801:10825  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20.sol\":10828:10853  allowance(owner, spender) */\n      tag_178\n        /* \"contracts/ERC20.sol\":10838:10843  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":10845:10852  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":10828:10837  allowance */\n      tag_100\n        /* \"contracts/ERC20.sol\":10828:10853  allowance(owner, spender) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/ERC20.sol\":10801:10853  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":10887:10904  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC20.sol\":10868:10884  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":10868:10904  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/ERC20.sol\":10864:11180  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"contracts/ERC20.sol\":10944:10949  value */\n      dup2\n        /* \"contracts/ERC20.sol\":10925:10941  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":10925:10949  currentAllowance < value */\n      lt\n        /* \"contracts/ERC20.sol\":10921:11053  if (currentAllowance < value) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"contracts/ERC20.sol\":11004:11011  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":11013:11029  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":11031:11036  value */\n      dup4\n        /* \"contracts/ERC20.sol\":10977:11037  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":10921:11053  if (currentAllowance < value) {... */\n    tag_180:\n        /* \"contracts/ERC20.sol\":11096:11153  _approve(owner, spender, currentAllowance - value, false) */\n      tag_183\n        /* \"contracts/ERC20.sol\":11105:11110  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":11112:11119  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":11140:11145  value */\n      dup5\n        /* \"contracts/ERC20.sol\":11121:11137  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":11121:11145  currentAllowance - value */\n      sub\n        /* \"contracts/ERC20.sol\":11147:11152  false */\n      0x00\n        /* \"contracts/ERC20.sol\":11096:11104  _approve */\n      tag_176\n        /* \"contracts/ERC20.sol\":11096:11153  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/ERC20.sol\":10864:11180  if (currentAllowance < type(uint256).max) {... */\n    tag_179:\n        /* \"contracts/ERC20.sol\":10790:11187  {... */\n      pop\n        /* \"contracts/ERC20.sol\":10701:11187  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5544:5852  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_122:\n        /* \"contracts/ERC20.sol\":5644:5645  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5628:5646  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5628:5632  from */\n      dup4\n        /* \"contracts/ERC20.sol\":5628:5646  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":5624:5712  if (from == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"contracts/ERC20.sol\":5697:5698  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5670:5700  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":5624:5712  if (from == address(0)) {... */\n    tag_185:\n        /* \"contracts/ERC20.sol\":5740:5741  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5726:5742  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5726:5728  to */\n      dup3\n        /* \"contracts/ERC20.sol\":5726:5742  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":5722:5810  if (to == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"contracts/ERC20.sol\":5795:5796  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5766:5798  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":5722:5810  if (to == address(0)) {... */\n    tag_188:\n        /* \"contracts/ERC20.sol\":5820:5844  _update(from, to, value) */\n      tag_190\n        /* \"contracts/ERC20.sol\":5828:5832  from */\n      dup4\n        /* \"contracts/ERC20.sol\":5834:5836  to */\n      dup4\n        /* \"contracts/ERC20.sol\":5838:5843  value */\n      dup4\n        /* \"contracts/ERC20.sol\":5820:5827  _update */\n      tag_191\n        /* \"contracts/ERC20.sol\":5820:5844  _update(from, to, value) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/ERC20.sol\":5544:5852  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":7664:7877  function _mint(address account, uint256 value) internal {... */\n    tag_172:\n        /* \"contracts/ERC20.sol\":7754:7755  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":7735:7756  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7735:7742  account */\n      dup3\n        /* \"contracts/ERC20.sol\":7735:7756  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":7731:7824  if (account == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"contracts/ERC20.sol\":7809:7810  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":7780:7812  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":7731:7824  if (account == address(0)) {... */\n    tag_193:\n        /* \"contracts/ERC20.sol\":7834:7869  _update(address(0), account, value) */\n      tag_195\n        /* \"contracts/ERC20.sol\":7850:7851  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":7854:7861  account */\n      dup4\n        /* \"contracts/ERC20.sol\":7863:7868  value */\n      dup4\n        /* \"contracts/ERC20.sol\":7834:7841  _update */\n      tag_191\n        /* \"contracts/ERC20.sol\":7834:7869  _update(address(0), account, value) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/ERC20.sol\":7664:7877  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":9966:10409  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_176:\n        /* \"contracts/ERC20.sol\":10096:10097  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10079:10098  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":10079:10084  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":10079:10098  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":10075:10166  if (owner == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"contracts/ERC20.sol\":10151:10152  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10122:10154  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":10075:10166  if (owner == address(0)) {... */\n    tag_197:\n        /* \"contracts/ERC20.sol\":10199:10200  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10180:10201  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":10180:10187  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":10180:10201  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":10176:10268  if (spender == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"contracts/ERC20.sol\":10253:10254  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":10225:10256  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":10176:10268  if (spender == address(0)) {... */\n    tag_199:\n        /* \"contracts/ERC20.sol\":10308:10313  value */\n      dup2\n        /* \"contracts/ERC20.sol\":10278:10289  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":10278:10296  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":10290:10295  owner */\n      dup7\n        /* \"contracts/ERC20.sol\":10278:10296  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":10278:10305  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":10297:10304  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":10278:10305  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":10278:10313  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":10328:10337  emitEvent */\n      dup1\n        /* \"contracts/ERC20.sol\":10324:10402  if (emitEvent) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/ERC20.sol\":10375:10382  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":10359:10390  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":10368:10373  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":10359:10390  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":10384:10389  value */\n      dup5\n        /* \"contracts/ERC20.sol\":10359:10390  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":10324:10402  if (emitEvent) {... */\n    tag_201:\n        /* \"contracts/ERC20.sol\":9966:10409  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":6176:7311  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_191:\n        /* \"contracts/ERC20.sol\":6282:6283  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":6266:6284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":6266:6270  from */\n      dup4\n        /* \"contracts/ERC20.sol\":6266:6284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":6262:6814  if (from == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"contracts/ERC20.sol\":6420:6425  value */\n      dup1\n        /* \"contracts/ERC20.sol\":6404:6416  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20.sol\":6404:6425  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6262:6814  if (from == address(0)) {... */\n      jump(tag_206)\n    tag_204:\n        /* \"contracts/ERC20.sol\":6458:6477  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC20.sol\":6480:6489  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":6480:6495  _balances[from] */\n      0x00\n        /* \"contracts/ERC20.sol\":6490:6494  from */\n      dup6\n        /* \"contracts/ERC20.sol\":6480:6495  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":6458:6495  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":6528:6533  value */\n      dup2\n        /* \"contracts/ERC20.sol\":6514:6525  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":6514:6533  fromBalance < value */\n      lt\n        /* \"contracts/ERC20.sol\":6510:6627  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"contracts/ERC20.sol\":6586:6590  from */\n      dup4\n        /* \"contracts/ERC20.sol\":6592:6603  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":6605:6610  value */\n      dup4\n        /* \"contracts/ERC20.sol\":6561:6611  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20.sol\":6510:6627  if (fromBalance < value) {... */\n    tag_207:\n        /* \"contracts/ERC20.sol\":6782:6787  value */\n      dup2\n        /* \"contracts/ERC20.sol\":6768:6779  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":6768:6787  fromBalance - value */\n      sub\n        /* \"contracts/ERC20.sol\":6750:6759  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":6750:6765  _balances[from] */\n      dup1\n        /* \"contracts/ERC20.sol\":6760:6764  from */\n      dup7\n        /* \"contracts/ERC20.sol\":6750:6765  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":6750:6787  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6443:6814  {... */\n      pop\n        /* \"contracts/ERC20.sol\":6262:6814  if (from == address(0)) {... */\n    tag_206:\n        /* \"contracts/ERC20.sol\":6844:6845  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":6830:6846  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":6830:6832  to */\n      dup3\n        /* \"contracts/ERC20.sol\":6830:6846  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":6826:7261  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"contracts/ERC20.sol\":7012:7017  value */\n      dup1\n        /* \"contracts/ERC20.sol\":6996:7008  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20.sol\":6996:7017  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6826:7261  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"contracts/ERC20.sol\":7229:7234  value */\n      dup1\n        /* \"contracts/ERC20.sol\":7212:7221  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":7212:7225  _balances[to] */\n      dup1\n        /* \"contracts/ERC20.sol\":7222:7224  to */\n      dup5\n        /* \"contracts/ERC20.sol\":7212:7225  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20.sol\":7212:7234  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":6826:7261  if (to == address(0)) {... */\n    tag_210:\n        /* \"contracts/ERC20.sol\":7293:7295  to */\n      dup2\n        /* \"contracts/ERC20.sol\":7278:7303  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":7287:7291  from */\n      dup4\n        /* \"contracts/ERC20.sol\":7278:7303  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":7297:7302  value */\n      dup4\n        /* \"contracts/ERC20.sol\":7278:7303  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":6176:7311  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_212:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_213:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_214:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_215:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_216:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_246\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_212\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":711:782   */\n      tag_247\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_213\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_248\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_214\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":881:910   */\n      tag_249\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_215\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_251\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_216\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_218:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_220:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_221:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_257\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_220\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_222:\n        /* \"#utility.yul\":1876:1900   */\n      tag_259\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_221\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_260:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_223:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_262\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_222\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_224:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_225:\n        /* \"#utility.yul\":2232:2256   */\n      tag_265\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_224\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_266:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_226:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_268\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_225\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_30:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_271\n      tag_218\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2525:2644   */\n    tag_270:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_272\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_223\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_273\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_226\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_227:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_228:\n        /* \"#utility.yul\":3089:3110   */\n      tag_276\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_227\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_33:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_278\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_228\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_229:\n        /* \"#utility.yul\":3426:3450   */\n      tag_280\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_224\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_38:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_282\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_229\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_42:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_285\n      tag_218\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3801:3920   */\n    tag_284:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_286\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_223\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_287\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_223\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_288\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_226\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4790   */\n    tag_48:\n        /* \"#utility.yul\":4384:4390   */\n      0x00\n        /* \"#utility.yul\":4392:4398   */\n      dup1\n        /* \"#utility.yul\":4441:4443   */\n      0x40\n        /* \"#utility.yul\":4429:4438   */\n      dup4\n        /* \"#utility.yul\":4420:4427   */\n      dup6\n        /* \"#utility.yul\":4416:4439   */\n      sub\n        /* \"#utility.yul\":4412:4444   */\n      slt\n        /* \"#utility.yul\":4409:4528   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":4447:4526   */\n      tag_291\n      tag_218\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4409:4528   */\n    tag_290:\n        /* \"#utility.yul\":4567:4568   */\n      0x00\n        /* \"#utility.yul\":4592:4645   */\n      tag_292\n        /* \"#utility.yul\":4637:4644   */\n      dup6\n        /* \"#utility.yul\":4628:4634   */\n      dup3\n        /* \"#utility.yul\":4617:4626   */\n      dup7\n        /* \"#utility.yul\":4613:4635   */\n      add\n        /* \"#utility.yul\":4592:4645   */\n      tag_223\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4582:4645   */\n      swap3\n      pop\n        /* \"#utility.yul\":4538:4655   */\n      pop\n        /* \"#utility.yul\":4694:4696   */\n      0x20\n        /* \"#utility.yul\":4720:4773   */\n      tag_293\n        /* \"#utility.yul\":4765:4772   */\n      dup6\n        /* \"#utility.yul\":4756:4762   */\n      dup3\n        /* \"#utility.yul\":4745:4754   */\n      dup7\n        /* \"#utility.yul\":4741:4763   */\n      add\n        /* \"#utility.yul\":4720:4773   */\n      tag_223\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4710:4773   */\n      swap2\n      pop\n        /* \"#utility.yul\":4665:4783   */\n      pop\n        /* \"#utility.yul\":4316:4790   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4796:4882   */\n    tag_230:\n        /* \"#utility.yul\":4831:4838   */\n      0x00\n        /* \"#utility.yul\":4871:4875   */\n      0xff\n        /* \"#utility.yul\":4864:4869   */\n      dup3\n        /* \"#utility.yul\":4860:4876   */\n      and\n        /* \"#utility.yul\":4849:4876   */\n      swap1\n      pop\n        /* \"#utility.yul\":4796:4882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4888:5000   */\n    tag_231:\n        /* \"#utility.yul\":4971:4993   */\n      tag_296\n        /* \"#utility.yul\":4987:4992   */\n      dup2\n        /* \"#utility.yul\":4971:4993   */\n      tag_230\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4966:4969   */\n      dup3\n        /* \"#utility.yul\":4959:4994   */\n      mstore\n        /* \"#utility.yul\":4888:5000   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5006:5220   */\n    tag_60:\n        /* \"#utility.yul\":5095:5099   */\n      0x00\n        /* \"#utility.yul\":5133:5135   */\n      0x20\n        /* \"#utility.yul\":5122:5131   */\n      dup3\n        /* \"#utility.yul\":5118:5136   */\n      add\n        /* \"#utility.yul\":5110:5136   */\n      swap1\n      pop\n        /* \"#utility.yul\":5146:5213   */\n      tag_298\n        /* \"#utility.yul\":5210:5211   */\n      0x00\n        /* \"#utility.yul\":5199:5208   */\n      dup4\n        /* \"#utility.yul\":5195:5212   */\n      add\n        /* \"#utility.yul\":5186:5192   */\n      dup5\n        /* \"#utility.yul\":5146:5213   */\n      tag_231\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5006:5220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5226:5555   */\n    tag_72:\n        /* \"#utility.yul\":5285:5291   */\n      0x00\n        /* \"#utility.yul\":5334:5336   */\n      0x20\n        /* \"#utility.yul\":5322:5331   */\n      dup3\n        /* \"#utility.yul\":5313:5320   */\n      dup5\n        /* \"#utility.yul\":5309:5332   */\n      sub\n        /* \"#utility.yul\":5305:5337   */\n      slt\n        /* \"#utility.yul\":5302:5421   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":5340:5419   */\n      tag_301\n      tag_218\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5302:5421   */\n    tag_300:\n        /* \"#utility.yul\":5460:5461   */\n      0x00\n        /* \"#utility.yul\":5485:5538   */\n      tag_302\n        /* \"#utility.yul\":5530:5537   */\n      dup5\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup6\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_223\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5431:5548   */\n      pop\n        /* \"#utility.yul\":5226:5555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_232:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_106:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_305:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_307\n      tag_232\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5977:6061   */\n    tag_306:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6253   */\n    tag_233:\n        /* \"#utility.yul\":6121:6198   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6118:6119   */\n      0x00\n        /* \"#utility.yul\":6111:6199   */\n      mstore\n        /* \"#utility.yul\":6218:6222   */\n      0x12\n        /* \"#utility.yul\":6215:6216   */\n      0x04\n        /* \"#utility.yul\":6208:6223   */\n      mstore\n        /* \"#utility.yul\":6242:6246   */\n      0x24\n        /* \"#utility.yul\":6239:6240   */\n      0x00\n        /* \"#utility.yul\":6232:6247   */\n      revert\n        /* \"#utility.yul\":6259:6439   */\n    tag_234:\n        /* \"#utility.yul\":6307:6384   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6297:6385   */\n      mstore\n        /* \"#utility.yul\":6404:6408   */\n      0x11\n        /* \"#utility.yul\":6401:6402   */\n      0x04\n        /* \"#utility.yul\":6394:6409   */\n      mstore\n        /* \"#utility.yul\":6428:6432   */\n      0x24\n        /* \"#utility.yul\":6425:6426   */\n      0x00\n        /* \"#utility.yul\":6418:6433   */\n      revert\n        /* \"#utility.yul\":6445:6630   */\n    tag_126:\n        /* \"#utility.yul\":6485:6486   */\n      0x00\n        /* \"#utility.yul\":6502:6522   */\n      tag_311\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6502:6522   */\n      tag_224\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6497:6522   */\n      swap2\n      pop\n        /* \"#utility.yul\":6536:6556   */\n      tag_312\n        /* \"#utility.yul\":6554:6555   */\n      dup4\n        /* \"#utility.yul\":6536:6556   */\n      tag_224\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6531:6556   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6576   */\n      dup3\n        /* \"#utility.yul\":6565:6600   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":6580:6598   */\n      tag_314\n      tag_233\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6565:6600   */\n    tag_313:\n        /* \"#utility.yul\":6622:6623   */\n      dup3\n        /* \"#utility.yul\":6619:6620   */\n      dup3\n        /* \"#utility.yul\":6615:6624   */\n      div\n        /* \"#utility.yul\":6610:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6445:6630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6636:7046   */\n    tag_130:\n        /* \"#utility.yul\":6676:6683   */\n      0x00\n        /* \"#utility.yul\":6699:6719   */\n      tag_316\n        /* \"#utility.yul\":6717:6718   */\n      dup3\n        /* \"#utility.yul\":6699:6719   */\n      tag_224\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6694:6719   */\n      swap2\n      pop\n        /* \"#utility.yul\":6733:6753   */\n      tag_317\n        /* \"#utility.yul\":6751:6752   */\n      dup4\n        /* \"#utility.yul\":6733:6753   */\n      tag_224\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6728:6753   */\n      swap3\n      pop\n        /* \"#utility.yul\":6788:6789   */\n      dup3\n        /* \"#utility.yul\":6785:6786   */\n      dup3\n        /* \"#utility.yul\":6781:6790   */\n      mul\n        /* \"#utility.yul\":6810:6840   */\n      tag_318\n        /* \"#utility.yul\":6828:6839   */\n      dup2\n        /* \"#utility.yul\":6810:6840   */\n      tag_224\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6799:6840   */\n      swap2\n      pop\n        /* \"#utility.yul\":6989:6990   */\n      dup3\n        /* \"#utility.yul\":6980:6987   */\n      dup3\n        /* \"#utility.yul\":6976:6991   */\n      div\n        /* \"#utility.yul\":6973:6974   */\n      dup5\n        /* \"#utility.yul\":6970:6992   */\n      eq\n        /* \"#utility.yul\":6950:6951   */\n      dup4\n        /* \"#utility.yul\":6943:6952   */\n      iszero\n        /* \"#utility.yul\":6923:7006   */\n      or\n        /* \"#utility.yul\":6900:7039   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":7019:7037   */\n      tag_320\n      tag_234\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6900:7039   */\n    tag_319:\n        /* \"#utility.yul\":6684:7046   */\n      pop\n        /* \"#utility.yul\":6636:7046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7052:7280   */\n    tag_235:\n        /* \"#utility.yul\":7192:7226   */\n      0x5761726e696e673a20596f7520617265206e6f7420616c6c6f77656420746f20\n        /* \"#utility.yul\":7188:7189   */\n      0x00\n        /* \"#utility.yul\":7180:7186   */\n      dup3\n        /* \"#utility.yul\":7176:7190   */\n      add\n        /* \"#utility.yul\":7169:7227   */\n      mstore\n        /* \"#utility.yul\":7261:7272   */\n      0x7472616e73666572210000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7256:7258   */\n      0x20\n        /* \"#utility.yul\":7248:7254   */\n      dup3\n        /* \"#utility.yul\":7244:7259   */\n      add\n        /* \"#utility.yul\":7237:7273   */\n      mstore\n        /* \"#utility.yul\":7052:7280   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7652   */\n    tag_236:\n        /* \"#utility.yul\":7428:7431   */\n      0x00\n        /* \"#utility.yul\":7449:7516   */\n      tag_323\n        /* \"#utility.yul\":7513:7515   */\n      0x29\n        /* \"#utility.yul\":7508:7511   */\n      dup4\n        /* \"#utility.yul\":7449:7516   */\n      tag_213\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7442:7516   */\n      swap2\n      pop\n        /* \"#utility.yul\":7525:7618   */\n      tag_324\n        /* \"#utility.yul\":7614:7617   */\n      dup3\n        /* \"#utility.yul\":7525:7618   */\n      tag_235\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7643:7645   */\n      0x40\n        /* \"#utility.yul\":7638:7641   */\n      dup3\n        /* \"#utility.yul\":7634:7646   */\n      add\n        /* \"#utility.yul\":7627:7646   */\n      swap1\n      pop\n        /* \"#utility.yul\":7286:7652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7658:8077   */\n    tag_159:\n        /* \"#utility.yul\":7824:7828   */\n      0x00\n        /* \"#utility.yul\":7862:7864   */\n      0x20\n        /* \"#utility.yul\":7851:7860   */\n      dup3\n        /* \"#utility.yul\":7847:7865   */\n      add\n        /* \"#utility.yul\":7839:7865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7911:7920   */\n      dup2\n        /* \"#utility.yul\":7905:7909   */\n      dup2\n        /* \"#utility.yul\":7901:7921   */\n      sub\n        /* \"#utility.yul\":7897:7898   */\n      0x00\n        /* \"#utility.yul\":7886:7895   */\n      dup4\n        /* \"#utility.yul\":7882:7899   */\n      add\n        /* \"#utility.yul\":7875:7922   */\n      mstore\n        /* \"#utility.yul\":7939:8070   */\n      tag_326\n        /* \"#utility.yul\":8065:8069   */\n      dup2\n        /* \"#utility.yul\":7939:8070   */\n      tag_236\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7931:8070   */\n      swap1\n      pop\n        /* \"#utility.yul\":7658:8077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8083:8274   */\n    tag_167:\n        /* \"#utility.yul\":8123:8126   */\n      0x00\n        /* \"#utility.yul\":8142:8162   */\n      tag_328\n        /* \"#utility.yul\":8160:8161   */\n      dup3\n        /* \"#utility.yul\":8142:8162   */\n      tag_224\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8137:8162   */\n      swap2\n      pop\n        /* \"#utility.yul\":8176:8196   */\n      tag_329\n        /* \"#utility.yul\":8194:8195   */\n      dup4\n        /* \"#utility.yul\":8176:8196   */\n      tag_224\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8171:8196   */\n      swap3\n      pop\n        /* \"#utility.yul\":8219:8220   */\n      dup3\n        /* \"#utility.yul\":8216:8217   */\n      dup3\n        /* \"#utility.yul\":8212:8221   */\n      add\n        /* \"#utility.yul\":8205:8221   */\n      swap1\n      pop\n        /* \"#utility.yul\":8240:8243   */\n      dup1\n        /* \"#utility.yul\":8237:8238   */\n      dup3\n        /* \"#utility.yul\":8234:8244   */\n      gt\n        /* \"#utility.yul\":8231:8267   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":8247:8265   */\n      tag_331\n      tag_234\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8231:8267   */\n    tag_330:\n        /* \"#utility.yul\":8083:8274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8280:8458   */\n    tag_237:\n        /* \"#utility.yul\":8420:8450   */\n      0x5761726e696e673a20496e73756666696369656e74204d6f6e6b732100000000\n        /* \"#utility.yul\":8416:8417   */\n      0x00\n        /* \"#utility.yul\":8408:8414   */\n      dup3\n        /* \"#utility.yul\":8404:8418   */\n      add\n        /* \"#utility.yul\":8397:8451   */\n      mstore\n        /* \"#utility.yul\":8280:8458   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8464:8830   */\n    tag_238:\n        /* \"#utility.yul\":8606:8609   */\n      0x00\n        /* \"#utility.yul\":8627:8694   */\n      tag_334\n        /* \"#utility.yul\":8691:8693   */\n      0x1c\n        /* \"#utility.yul\":8686:8689   */\n      dup4\n        /* \"#utility.yul\":8627:8694   */\n      tag_213\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":8620:8694   */\n      swap2\n      pop\n        /* \"#utility.yul\":8703:8796   */\n      tag_335\n        /* \"#utility.yul\":8792:8795   */\n      dup3\n        /* \"#utility.yul\":8703:8796   */\n      tag_237\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8821:8823   */\n      0x20\n        /* \"#utility.yul\":8816:8819   */\n      dup3\n        /* \"#utility.yul\":8812:8824   */\n      add\n        /* \"#utility.yul\":8805:8824   */\n      swap1\n      pop\n        /* \"#utility.yul\":8464:8830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8836:9255   */\n    tag_170:\n        /* \"#utility.yul\":9002:9006   */\n      0x00\n        /* \"#utility.yul\":9040:9042   */\n      0x20\n        /* \"#utility.yul\":9029:9038   */\n      dup3\n        /* \"#utility.yul\":9025:9043   */\n      add\n        /* \"#utility.yul\":9017:9043   */\n      swap1\n      pop\n        /* \"#utility.yul\":9089:9098   */\n      dup2\n        /* \"#utility.yul\":9083:9087   */\n      dup2\n        /* \"#utility.yul\":9079:9099   */\n      sub\n        /* \"#utility.yul\":9075:9076   */\n      0x00\n        /* \"#utility.yul\":9064:9073   */\n      dup4\n        /* \"#utility.yul\":9060:9077   */\n      add\n        /* \"#utility.yul\":9053:9100   */\n      mstore\n        /* \"#utility.yul\":9117:9248   */\n      tag_337\n        /* \"#utility.yul\":9243:9247   */\n      dup2\n        /* \"#utility.yul\":9117:9248   */\n      tag_238\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":9109:9248   */\n      swap1\n      pop\n        /* \"#utility.yul\":8836:9255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9261:9379   */\n    tag_239:\n        /* \"#utility.yul\":9348:9372   */\n      tag_339\n        /* \"#utility.yul\":9366:9371   */\n      dup2\n        /* \"#utility.yul\":9348:9372   */\n      tag_221\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9343:9346   */\n      dup3\n        /* \"#utility.yul\":9336:9373   */\n      mstore\n        /* \"#utility.yul\":9261:9379   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9385:9827   */\n    tag_182:\n        /* \"#utility.yul\":9534:9538   */\n      0x00\n        /* \"#utility.yul\":9572:9574   */\n      0x60\n        /* \"#utility.yul\":9561:9570   */\n      dup3\n        /* \"#utility.yul\":9557:9575   */\n      add\n        /* \"#utility.yul\":9549:9575   */\n      swap1\n      pop\n        /* \"#utility.yul\":9585:9656   */\n      tag_341\n        /* \"#utility.yul\":9653:9654   */\n      0x00\n        /* \"#utility.yul\":9642:9651   */\n      dup4\n        /* \"#utility.yul\":9638:9655   */\n      add\n        /* \"#utility.yul\":9629:9635   */\n      dup7\n        /* \"#utility.yul\":9585:9656   */\n      tag_239\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9666:9738   */\n      tag_342\n        /* \"#utility.yul\":9734:9736   */\n      0x20\n        /* \"#utility.yul\":9723:9732   */\n      dup4\n        /* \"#utility.yul\":9719:9737   */\n      add\n        /* \"#utility.yul\":9710:9716   */\n      dup6\n        /* \"#utility.yul\":9666:9738   */\n      tag_229\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9748:9820   */\n      tag_343\n        /* \"#utility.yul\":9816:9818   */\n      0x40\n        /* \"#utility.yul\":9805:9814   */\n      dup4\n        /* \"#utility.yul\":9801:9819   */\n      add\n        /* \"#utility.yul\":9792:9798   */\n      dup5\n        /* \"#utility.yul\":9748:9820   */\n      tag_229\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9385:9827   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9833:10055   */\n    tag_187:\n        /* \"#utility.yul\":9926:9930   */\n      0x00\n        /* \"#utility.yul\":9964:9966   */\n      0x20\n        /* \"#utility.yul\":9953:9962   */\n      dup3\n        /* \"#utility.yul\":9949:9967   */\n      add\n        /* \"#utility.yul\":9941:9967   */\n      swap1\n      pop\n        /* \"#utility.yul\":9977:10048   */\n      tag_345\n        /* \"#utility.yul\":10045:10046   */\n      0x00\n        /* \"#utility.yul\":10034:10043   */\n      dup4\n        /* \"#utility.yul\":10030:10047   */\n      add\n        /* \"#utility.yul\":10021:10027   */\n      dup5\n        /* \"#utility.yul\":9977:10048   */\n      tag_239\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9833:10055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dfaadced6b7ee438ab182b9d32ee6a80cc0a437fa52974ee6e970897fd3d463164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_622": {
									"entryPoint": null,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:6",
										"nodeType": "YulBlock",
										"src": "0:5231:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "140:152:6",
													"nodeType": "YulBlock",
													"src": "140:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:6",
																		"nodeType": "YulLiteral",
																		"src": "160:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:6"
																},
																"nativeSrc": "150:88:6",
																"nodeType": "YulFunctionCall",
																"src": "150:88:6"
															},
															"nativeSrc": "150:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:6",
																		"nodeType": "YulLiteral",
																		"src": "254:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:6",
																		"nodeType": "YulLiteral",
																		"src": "257:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:6"
																},
																"nativeSrc": "247:15:6",
																"nodeType": "YulFunctionCall",
																"src": "247:15:6"
															},
															"nativeSrc": "247:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:6",
																		"nodeType": "YulLiteral",
																		"src": "281:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:6"
																},
																"nativeSrc": "271:15:6",
																"nodeType": "YulFunctionCall",
																"src": "271:15:6"
															},
															"nativeSrc": "271:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:6"
											},
											{
												"body": {
													"nativeSrc": "326:152:6",
													"nodeType": "YulBlock",
													"src": "326:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:6",
																		"nodeType": "YulLiteral",
																		"src": "343:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:6",
																		"nodeType": "YulLiteral",
																		"src": "346:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nativeSrc": "336:88:6",
																"nodeType": "YulFunctionCall",
																"src": "336:88:6"
															},
															"nativeSrc": "336:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:6",
																		"nodeType": "YulLiteral",
																		"src": "443:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:15:6",
																"nodeType": "YulFunctionCall",
																"src": "433:15:6"
															},
															"nativeSrc": "433:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:6",
																		"nodeType": "YulLiteral",
																		"src": "464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:6",
																		"nodeType": "YulLiteral",
																		"src": "467:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																},
																"nativeSrc": "457:15:6",
																"nodeType": "YulFunctionCall",
																"src": "457:15:6"
															},
															"nativeSrc": "457:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:6"
											},
											{
												"body": {
													"nativeSrc": "535:269:6",
													"nodeType": "YulBlock",
													"src": "535:269:6",
													"statements": [
														{
															"nativeSrc": "545:22:6",
															"nodeType": "YulAssignment",
															"src": "545:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:6",
																		"nodeType": "YulLiteral",
																		"src": "565:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:6"
																},
																"nativeSrc": "555:12:6",
																"nodeType": "YulFunctionCall",
																"src": "555:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																}
															]
														},
														{
															"nativeSrc": "576:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:6",
																		"nodeType": "YulLiteral",
																		"src": "612:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:6"
																},
																"nativeSrc": "602:12:6",
																"nodeType": "YulFunctionCall",
																"src": "602:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:6",
																	"nodeType": "YulTypedName",
																	"src": "580:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:6",
																"nodeType": "YulBlock",
																"src": "653:51:6",
																"statements": [
																	{
																		"nativeSrc": "667:27:6",
																		"nodeType": "YulAssignment",
																		"src": "667:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:6",
																					"nodeType": "YulLiteral",
																					"src": "689:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:6"
																			},
																			"nativeSrc": "677:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																},
																"nativeSrc": "626:26:6",
																"nodeType": "YulFunctionCall",
																"src": "626:26:6"
															},
															"nativeSrc": "623:81:6",
															"nodeType": "YulIf",
															"src": "623:81:6"
														},
														{
															"body": {
																"nativeSrc": "756:42:6",
																"nodeType": "YulBlock",
																"src": "756:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:6"
																			},
																			"nativeSrc": "770:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:6"
																		},
																		"nativeSrc": "770:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:6",
																				"nodeType": "YulLiteral",
																				"src": "751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:6"
																		},
																		"nativeSrc": "740:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:6"
																},
																"nativeSrc": "717:38:6",
																"nodeType": "YulFunctionCall",
																"src": "717:38:6"
															},
															"nativeSrc": "714:84:6",
															"nodeType": "YulIf",
															"src": "714:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:6",
														"nodeType": "YulTypedName",
														"src": "519:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:6",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													}
												],
												"src": "484:320:6"
											},
											{
												"body": {
													"nativeSrc": "864:87:6",
													"nodeType": "YulBlock",
													"src": "864:87:6",
													"statements": [
														{
															"nativeSrc": "874:11:6",
															"nodeType": "YulAssignment",
															"src": "874:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:6",
																"nodeType": "YulIdentifier",
																"src": "882:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																},
																"nativeSrc": "895:14:6",
																"nodeType": "YulFunctionCall",
																"src": "895:14:6"
															},
															"nativeSrc": "895:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:6"
														},
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:6",
																		"nodeType": "YulLiteral",
																		"src": "939:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:6",
														"nodeType": "YulTypedName",
														"src": "851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:6",
														"nodeType": "YulTypedName",
														"src": "859:4:6",
														"type": ""
													}
												],
												"src": "810:141:6"
											},
											{
												"body": {
													"nativeSrc": "1001:49:6",
													"nodeType": "YulBlock",
													"src": "1001:49:6",
													"statements": [
														{
															"nativeSrc": "1011:33:6",
															"nodeType": "YulAssignment",
															"src": "1011:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:6"
																		},
																		"nativeSrc": "1025:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:6"
																},
																"nativeSrc": "1021:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:6",
														"nodeType": "YulTypedName",
														"src": "984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:6",
														"nodeType": "YulTypedName",
														"src": "994:6:6",
														"type": ""
													}
												],
												"src": "957:93:6"
											},
											{
												"body": {
													"nativeSrc": "1109:54:6",
													"nodeType": "YulBlock",
													"src": "1109:54:6",
													"statements": [
														{
															"nativeSrc": "1119:37:6",
															"nodeType": "YulAssignment",
															"src": "1119:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nativeSrc": "1140:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:6",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:6",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:6",
														"nodeType": "YulTypedName",
														"src": "1100:8:6",
														"type": ""
													}
												],
												"src": "1056:107:6"
											},
											{
												"body": {
													"nativeSrc": "1245:317:6",
													"nodeType": "YulBlock",
													"src": "1245:317:6",
													"statements": [
														{
															"nativeSrc": "1255:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nativeSrc": "1272:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:6"
																},
																"nativeSrc": "1311:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:6",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:6",
															"nodeType": "YulAssignment",
															"src": "1417:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nativeSrc": "1429:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:6"
																}
															]
														},
														{
															"nativeSrc": "1477:30:6",
															"nodeType": "YulAssignment",
															"src": "1477:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nativeSrc": "1497:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:6"
																},
																"nativeSrc": "1486:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:6"
																}
															]
														},
														{
															"nativeSrc": "1516:40:6",
															"nodeType": "YulAssignment",
															"src": "1516:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:6"
																		},
																		"nativeSrc": "1536:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:6"
																},
																"nativeSrc": "1526:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:6",
														"nodeType": "YulTypedName",
														"src": "1206:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:6",
														"nodeType": "YulTypedName",
														"src": "1213:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:6",
														"nodeType": "YulTypedName",
														"src": "1225:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:6",
														"nodeType": "YulTypedName",
														"src": "1238:6:6",
														"type": ""
													}
												],
												"src": "1169:393:6"
											},
											{
												"body": {
													"nativeSrc": "1613:32:6",
													"nodeType": "YulBlock",
													"src": "1613:32:6",
													"statements": [
														{
															"nativeSrc": "1623:16:6",
															"nodeType": "YulAssignment",
															"src": "1623:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:6",
																"nodeType": "YulIdentifier",
																"src": "1634:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:6",
														"nodeType": "YulTypedName",
														"src": "1595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"src": "1568:77:6"
											},
											{
												"body": {
													"nativeSrc": "1683:28:6",
													"nodeType": "YulBlock",
													"src": "1683:28:6",
													"statements": [
														{
															"nativeSrc": "1693:12:6",
															"nodeType": "YulAssignment",
															"src": "1693:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:6",
																"nodeType": "YulIdentifier",
																"src": "1700:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:6",
														"nodeType": "YulTypedName",
														"src": "1669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:6",
														"nodeType": "YulTypedName",
														"src": "1679:3:6",
														"type": ""
													}
												],
												"src": "1651:60:6"
											},
											{
												"body": {
													"nativeSrc": "1777:82:6",
													"nodeType": "YulBlock",
													"src": "1777:82:6",
													"statements": [
														{
															"nativeSrc": "1787:66:6",
															"nodeType": "YulAssignment",
															"src": "1787:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:6"
																				},
																				"nativeSrc": "1827:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:6"
																		},
																		"nativeSrc": "1818:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:6"
																},
																"nativeSrc": "1800:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:6",
														"nodeType": "YulTypedName",
														"src": "1757:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:6",
														"nodeType": "YulTypedName",
														"src": "1767:9:6",
														"type": ""
													}
												],
												"src": "1717:142:6"
											},
											{
												"body": {
													"nativeSrc": "1912:28:6",
													"nodeType": "YulBlock",
													"src": "1912:28:6",
													"statements": [
														{
															"nativeSrc": "1922:12:6",
															"nodeType": "YulAssignment",
															"src": "1922:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:6",
																"nodeType": "YulIdentifier",
																"src": "1929:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:6",
														"nodeType": "YulTypedName",
														"src": "1898:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:6",
														"nodeType": "YulTypedName",
														"src": "1908:3:6",
														"type": ""
													}
												],
												"src": "1865:75:6"
											},
											{
												"body": {
													"nativeSrc": "2022:193:6",
													"nodeType": "YulBlock",
													"src": "2022:193:6",
													"statements": [
														{
															"nativeSrc": "2032:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:6"
																},
																"nativeSrc": "2056:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:6"
																				},
																				"nativeSrc": "2145:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:6"
																				},
																				"nativeSrc": "2166:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:6"
																		},
																		"nativeSrc": "2117:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:6"
																},
																"nativeSrc": "2104:105:6",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:6"
															},
															"nativeSrc": "2104:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:6",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:6",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:6",
														"nodeType": "YulTypedName",
														"src": "2013:7:6",
														"type": ""
													}
												],
												"src": "1946:269:6"
											},
											{
												"body": {
													"nativeSrc": "2270:24:6",
													"nodeType": "YulBlock",
													"src": "2270:24:6",
													"statements": [
														{
															"nativeSrc": "2280:8:6",
															"nodeType": "YulAssignment",
															"src": "2280:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:6",
																"nodeType": "YulLiteral",
																"src": "2287:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:6",
														"nodeType": "YulTypedName",
														"src": "2266:3:6",
														"type": ""
													}
												],
												"src": "2221:73:6"
											},
											{
												"body": {
													"nativeSrc": "2353:136:6",
													"nodeType": "YulBlock",
													"src": "2353:136:6",
													"statements": [
														{
															"nativeSrc": "2363:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:6"
																},
																"nativeSrc": "2377:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:6"
																},
																"nativeSrc": "2418:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:6"
															},
															"nativeSrc": "2418:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:6",
														"nodeType": "YulTypedName",
														"src": "2339:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:6",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													}
												],
												"src": "2300:189:6"
											},
											{
												"body": {
													"nativeSrc": "2545:136:6",
													"nodeType": "YulBlock",
													"src": "2545:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:6",
																"nodeType": "YulBlock",
																"src": "2612:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:6"
																			},
																			"nativeSrc": "2626:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:6"
																		},
																		"nativeSrc": "2626:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:6"
																},
																"nativeSrc": "2562:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:6"
															},
															"nativeSrc": "2555:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:6",
																"nodeType": "YulBlock",
																"src": "2577:26:6",
																"statements": [
																	{
																		"nativeSrc": "2579:22:6",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:6"
																			},
																			"nativeSrc": "2588:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:6",
																"nodeType": "YulBlock",
																"src": "2559:2:6",
																"statements": []
															},
															"src": "2555:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:6",
														"nodeType": "YulTypedName",
														"src": "2533:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:6",
														"nodeType": "YulTypedName",
														"src": "2540:3:6",
														"type": ""
													}
												],
												"src": "2495:186:6"
											},
											{
												"body": {
													"nativeSrc": "2766:464:6",
													"nodeType": "YulBlock",
													"src": "2766:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:6",
																"nodeType": "YulBlock",
																"src": "2792:431:6",
																"statements": [
																	{
																		"nativeSrc": "2806:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:6"
																			},
																			"nativeSrc": "2822:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:6",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:6"
																					},
																					"nativeSrc": "2906:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:6"
																			},
																			"nativeSrc": "2892:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:6",
																			"nodeType": "YulBlock",
																			"src": "3093:27:6",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:6",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:6",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:6"
																			},
																			"nativeSrc": "3074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:6"
																		},
																		"nativeSrc": "3071:49:6",
																		"nodeType": "YulIf",
																		"src": "3071:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:6"
																							},
																							"nativeSrc": "3189:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:6"
																					},
																					"nativeSrc": "3175:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:6"
																			},
																			"nativeSrc": "3133:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:6"
																		},
																		"nativeSrc": "3133:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nativeSrc": "2780:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:6"
															},
															"nativeSrc": "2777:446:6",
															"nodeType": "YulIf",
															"src": "2777:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:6",
														"nodeType": "YulTypedName",
														"src": "2742:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:6",
														"nodeType": "YulTypedName",
														"src": "2749:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:6",
														"nodeType": "YulTypedName",
														"src": "2754:10:6",
														"type": ""
													}
												],
												"src": "2687:543:6"
											},
											{
												"body": {
													"nativeSrc": "3299:54:6",
													"nodeType": "YulBlock",
													"src": "3299:54:6",
													"statements": [
														{
															"nativeSrc": "3309:37:6",
															"nodeType": "YulAssignment",
															"src": "3309:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:6"
																},
																"nativeSrc": "3330:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:6",
														"nodeType": "YulTypedName",
														"src": "3274:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:6",
														"nodeType": "YulTypedName",
														"src": "3280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:6",
														"nodeType": "YulTypedName",
														"src": "3290:8:6",
														"type": ""
													}
												],
												"src": "3236:117:6"
											},
											{
												"body": {
													"nativeSrc": "3410:118:6",
													"nodeType": "YulBlock",
													"src": "3410:118:6",
													"statements": [
														{
															"nativeSrc": "3420:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:6"
																				},
																				"nativeSrc": "3465:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:6"
																				},
																				"nativeSrc": "3480:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:6"
																		},
																		"nativeSrc": "3436:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nativeSrc": "3432:56:6",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:6",
															"nodeType": "YulAssignment",
															"src": "3497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																},
																"nativeSrc": "3507:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:6",
														"nodeType": "YulTypedName",
														"src": "3387:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:6",
														"nodeType": "YulTypedName",
														"src": "3393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:6",
														"nodeType": "YulTypedName",
														"src": "3403:6:6",
														"type": ""
													}
												],
												"src": "3359:169:6"
											},
											{
												"body": {
													"nativeSrc": "3614:214:6",
													"nodeType": "YulBlock",
													"src": "3614:214:6",
													"statements": [
														{
															"nativeSrc": "3747:37:6",
															"nodeType": "YulAssignment",
															"src": "3747:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:6"
																},
																"nativeSrc": "3755:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"nativeSrc": "3793:29:6",
															"nodeType": "YulAssignment",
															"src": "3793:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:6"
																		},
																		"nativeSrc": "3810:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:6"
																},
																"nativeSrc": "3801:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:6",
														"nodeType": "YulTypedName",
														"src": "3595:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:6",
														"nodeType": "YulTypedName",
														"src": "3601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:6",
														"nodeType": "YulTypedName",
														"src": "3609:4:6",
														"type": ""
													}
												],
												"src": "3533:295:6"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:6",
													"nodeType": "YulBlock",
													"src": "3925:1303:6",
													"statements": [
														{
															"nativeSrc": "3936:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:6"
																},
																"nativeSrc": "3950:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:6",
																"nodeType": "YulBlock",
																"src": "4072:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:6"
																			},
																			"nativeSrc": "4074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:6"
																		},
																		"nativeSrc": "4074:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:6",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nativeSrc": "4041:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:6"
															},
															"nativeSrc": "4038:56:6",
															"nodeType": "YulIf",
															"src": "4038:56:6"
														},
														{
															"nativeSrc": "4104:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:6"
																		},
																		"nativeSrc": "4144:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:6"
																},
																"nativeSrc": "4118:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:6"
																},
																"nativeSrc": "4203:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:6"
															},
															"nativeSrc": "4203:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:6"
														},
														{
															"nativeSrc": "4280:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:6",
																"nodeType": "YulLiteral",
																"src": "4297:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:6",
															"nodeType": "YulAssignment",
															"src": "4308:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:6",
																"nodeType": "YulLiteral",
																"src": "4321:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:6",
																		"nodeType": "YulBlock",
																		"src": "4372:611:6",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:6",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:6"
																							},
																							"nativeSrc": "4413:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:6"
																					},
																					"nativeSrc": "4401:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:6",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:6"
																					},
																					"nativeSrc": "4451:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:6",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:6",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:6",
																					"nodeType": "YulBlock",
																					"src": "4569:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:6"
																												},
																												"nativeSrc": "4608:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:6"
																										},
																										"nativeSrc": "4602:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:6"
																								},
																								"nativeSrc": "4587:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:6"
																							},
																							"nativeSrc": "4587:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:6"
																						},
																						{
																							"nativeSrc": "4646:24:6",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:6",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:6"
																								},
																								"nativeSrc": "4656:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:6",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:6",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:6"
																								},
																								"nativeSrc": "4700:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:6"
																					},
																					"nativeSrc": "4532:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:6"
																				},
																				"nativeSrc": "4524:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:6",
																					"nodeType": "YulBlock",
																					"src": "4547:21:6",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:6",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:6",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:6"
																								},
																								"nativeSrc": "4554:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:6",
																					"nodeType": "YulBlock",
																					"src": "4528:3:6",
																					"statements": []
																				},
																				"src": "4524:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:6",
																					"nodeType": "YulBlock",
																					"src": "4768:156:6",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:6"
																										},
																										"nativeSrc": "4809:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:6"
																								},
																								"nativeSrc": "4803:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:6",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:6",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:6"
																												},
																												"nativeSrc": "4891:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:6"
																										},
																										"nativeSrc": "4861:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:6"
																								},
																								"nativeSrc": "4846:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:6"
																							},
																							"nativeSrc": "4846:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:6"
																					},
																					"nativeSrc": "4748:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:6"
																				},
																				"nativeSrc": "4745:179:6",
																				"nodeType": "YulIf",
																				"src": "4745:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:6",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:6"
																									},
																									"nativeSrc": "4954:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:6"
																							},
																							"nativeSrc": "4950:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:6"
																					},
																					"nativeSrc": "4937:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:6"
																				},
																				"nativeSrc": "4937:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:6"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:6",
																	"nodeType": "YulCase",
																	"src": "4365:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:6",
																		"nodeType": "YulBlock",
																		"src": "5000:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:6",
																					"nodeType": "YulBlock",
																					"src": "5051:67:6",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:6",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:6"
																										},
																										"nativeSrc": "5084:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:6"
																								},
																								"nativeSrc": "5078:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:6"
																				},
																				"nativeSrc": "5041:77:6",
																				"nodeType": "YulIf",
																				"src": "5041:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:6"
																							},
																							"nativeSrc": "5144:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:6"
																					},
																					"nativeSrc": "5131:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:6"
																				},
																				"nativeSrc": "5131:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:6"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:6",
																	"nodeType": "YulCase",
																	"src": "4992:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:6"
																},
																"nativeSrc": "4342:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:6"
															},
															"nativeSrc": "4335:887:6",
															"nodeType": "YulSwitch",
															"src": "4335:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:6",
														"nodeType": "YulTypedName",
														"src": "3914:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:6",
														"nodeType": "YulTypedName",
														"src": "3920:3:6",
														"type": ""
													}
												],
												"src": "3833:1395:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4F4E4B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4B000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST POP POP POP CALLER PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x3FD JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x182 JUMPI PUSH2 0x181 PUSH2 0x12B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1E4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x1EE DUP7 DUP4 PUSH2 0x1A9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x232 PUSH2 0x22D PUSH2 0x228 DUP5 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP4 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x257 DUP3 PUSH2 0x239 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x267 JUMP JUMPDEST PUSH2 0x27E DUP2 DUP5 DUP5 PUSH2 0x242 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH2 0x296 PUSH0 DUP3 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x284 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2E6 JUMPI PUSH2 0x2B7 DUP2 PUSH2 0x188 JUMP JUMPDEST PUSH2 0x2C0 DUP5 PUSH2 0x19A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2CF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2E3 PUSH2 0x2DB DUP6 PUSH2 0x19A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x283 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x306 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2EB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31E DUP4 DUP4 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x337 DUP3 PUSH2 0xF4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x350 JUMPI PUSH2 0x34F PUSH2 0xFE JUMP JUMPDEST JUMPDEST PUSH2 0x35A DUP3 SLOAD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x365 DUP3 DUP3 DUP6 PUSH2 0x2A5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x396 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x384 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x38E DUP6 DUP3 PUSH2 0x313 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3A4 DUP7 PUSH2 0x188 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3CB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3E8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3E4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13FA DUP1 PUSH2 0x40A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x450BCF40 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB1609967 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xD4721D68 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF107079D EQ PUSH2 0x42D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x450BCF40 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x9F847091 EQ PUSH2 0x327 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x3042DBE8 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3042DBE8 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x30B67A99 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x44F0F068 EQ PUSH2 0x26F JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B3 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x472 SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x494 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D1 PUSH2 0x86C JUMP JUMPDEST SWAP1 POP PUSH2 0x4DE DUP2 DUP6 DUP6 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FC PUSH2 0x86C JUMP JUMPDEST SWAP1 POP PUSH2 0x509 DUP6 DUP3 DUP6 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x514 DUP6 DUP6 DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x534 DUP5 DUP5 PUSH2 0x776 JUMP JUMPDEST PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x564 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x586 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B2 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x60B SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x637 SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x682 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x659 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x682 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x665 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x69F DUP4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6BA PUSH2 0x86C JUMP JUMPDEST SWAP1 POP PUSH2 0x6C7 DUP2 DUP6 DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6E5 CALLER PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x712 DUP5 CALLER PUSH2 0x776 JUMP JUMPDEST GT PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x770 DUP4 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 CALLVALUE PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH2 0x815 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST LT PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x856 SWAP1 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x869 CALLER DUP3 PUSH2 0xA08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x880 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x890 DUP5 DUP5 PUSH2 0x776 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x912 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x903 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x911 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA87 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x988 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA03 DUP4 DUP4 DUP4 PUSH2 0xC56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA83 PUSH0 DUP4 DUP4 PUSH2 0xC56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB67 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5E SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC50 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD74 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD2F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD26 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE05 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 DUP3 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0xEBB DUP2 DUP6 PUSH2 0xE79 JUMP JUMPDEST SWAP4 POP PUSH2 0xECB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE89 JUMP JUMPDEST PUSH2 0xED4 DUP2 PUSH2 0xE97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF7 DUP2 DUP5 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF2C DUP3 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3C DUP2 PUSH2 0xF22 JUMP JUMPDEST DUP2 EQ PUSH2 0xF46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF57 DUP2 PUSH2 0xF33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xF5D JUMP JUMPDEST DUP2 EQ PUSH2 0xF79 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8A DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB3 DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP6 DUP3 DUP7 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE2 DUP2 PUSH2 0xFCE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFFB PUSH0 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xF5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1023 PUSH0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1040 JUMPI PUSH2 0x103F PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x104D DUP7 DUP3 DUP8 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x105E DUP7 DUP3 DUP8 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x106F DUP7 DUP3 DUP8 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109C DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10AD DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1100 JUMPI PUSH2 0x10FF PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110D DUP5 DUP3 DUP6 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x115A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x116D JUMPI PUSH2 0x116C PUSH2 0x1116 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D7 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP PUSH2 0x11E2 DUP4 PUSH2 0xF5D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11F2 JUMPI PUSH2 0x11F1 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1207 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1212 DUP4 PUSH2 0xF5D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1220 DUP2 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1237 JUMPI PUSH2 0x1236 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5761726E696E673A20596F7520617265206E6F7420616C6C6F77656420746F20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616E73666572210000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1298 PUSH1 0x29 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A3 DUP3 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C5 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D6 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP PUSH2 0x12E1 DUP4 PUSH2 0xF5D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12F9 JUMPI PUSH2 0x12F8 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5761726E696E673A20496E73756666696369656E74204D6F6E6B732100000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1333 PUSH1 0x1C DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x133E DUP3 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1370 DUP2 PUSH2 0xF22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1389 PUSH0 DUP4 ADD DUP7 PUSH2 0x1367 JUMP JUMPDEST PUSH2 0x1396 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x13A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BE PUSH0 DUP4 ADD DUP5 PUSH2 0x1367 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xAA 0xDC 0xED PUSH12 0x7EE438AB182B9D32EE6A80CC EXP NUMBER PUSH32 0xA52974EE6E970897FD3D463164736F6C634300081A0033000000000000000000 ",
							"sourceMap": "171:2779:2:-:0;;;385:105;;;;;;;;;;1631:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1706:5;1698;:13;;;;;;:::i;:::-;;1732:7;1722;:17;;;;;;:::i;:::-;;1631:116;;418:10:2;410:5;;:18;;;;;;;;;;;;;;;;;;453:29;439:11;:43;;;;171:2779;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;171:2779:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_405": {
									"entryPoint": 2163,
									"id": 405,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_465": {
									"entryPoint": 2695,
									"id": 465,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_354": {
									"entryPoint": 2568,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_951": {
									"entryPoint": 2156,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_513": {
									"entryPoint": 2181,
									"id": 513,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_244": {
									"entryPoint": 2328,
									"id": 244,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_321": {
									"entryPoint": 3158,
									"id": 321,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 1910,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_165": {
									"entryPoint": 1223,
									"id": 165,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_100": {
									"entryPoint": 1463,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkMonkAllowance_763": {
									"entryPoint": 1312,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkMonksOf_679": {
									"entryPoint": 1676,
									"id": 679,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkMonks_664": {
									"entryPoint": 1746,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@currentMonkSupply_775": {
									"entryPoint": 1396,
									"id": 775,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_78": {
									"entryPoint": 1388,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMonks_650": {
									"entryPoint": 2040,
									"id": 650,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@giveMonkApproval_745": {
									"entryPoint": 1429,
									"id": 745,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_60": {
									"entryPoint": 1079,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_69": {
									"entryPoint": 1532,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_87": {
									"entryPoint": 1257,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_197": {
									"entryPoint": 1266,
									"id": 197,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferMonksFrom_729": {
									"entryPoint": 1780,
									"id": 729,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferMonks_697": {
									"entryPoint": 1350,
									"id": 697,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_124": {
									"entryPoint": 1712,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10058:6",
										"nodeType": "YulBlock",
										"src": "0:10058:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4399:391:6",
													"nodeType": "YulBlock",
													"src": "4399:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4445:83:6",
																"nodeType": "YulBlock",
																"src": "4445:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4447:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4447:77:6"
																			},
																			"nativeSrc": "4447:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4447:79:6"
																		},
																		"nativeSrc": "4447:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4420:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4420:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4429:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4429:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4416:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:6"
																		},
																		"nativeSrc": "4416:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4416:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4441:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4441:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4412:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:6"
																},
																"nativeSrc": "4412:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4412:32:6"
															},
															"nativeSrc": "4409:119:6",
															"nodeType": "YulIf",
															"src": "4409:119:6"
														},
														{
															"nativeSrc": "4538:117:6",
															"nodeType": "YulBlock",
															"src": "4538:117:6",
															"statements": [
																{
																	"nativeSrc": "4553:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4553:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4567:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4567:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4557:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4557:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4582:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4617:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4617:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4628:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4613:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4613:3:6"
																				},
																				"nativeSrc": "4613:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4637:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4592:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4592:20:6"
																		},
																		"nativeSrc": "4592:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4582:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4582:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4665:118:6",
															"nodeType": "YulBlock",
															"src": "4665:118:6",
															"statements": [
																{
																	"nativeSrc": "4680:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4680:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4694:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4684:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4684:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4710:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4710:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4745:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4745:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4756:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4756:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4741:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4741:3:6"
																				},
																				"nativeSrc": "4741:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4741:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4765:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4765:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4720:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4720:20:6"
																		},
																		"nativeSrc": "4720:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4720:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4710:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4710:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4316:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4361:9:6",
														"nodeType": "YulTypedName",
														"src": "4361:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4372:7:6",
														"nodeType": "YulTypedName",
														"src": "4372:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4384:6:6",
														"nodeType": "YulTypedName",
														"src": "4384:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4392:6:6",
														"nodeType": "YulTypedName",
														"src": "4392:6:6",
														"type": ""
													}
												],
												"src": "4316:474:6"
											},
											{
												"body": {
													"nativeSrc": "4839:43:6",
													"nodeType": "YulBlock",
													"src": "4839:43:6",
													"statements": [
														{
															"nativeSrc": "4849:27:6",
															"nodeType": "YulAssignment",
															"src": "4849:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4864:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4864:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4871:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4871:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4860:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4860:3:6"
																},
																"nativeSrc": "4860:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4860:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4849:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4849:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4796:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4821:5:6",
														"nodeType": "YulTypedName",
														"src": "4821:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4831:7:6",
														"nodeType": "YulTypedName",
														"src": "4831:7:6",
														"type": ""
													}
												],
												"src": "4796:86:6"
											},
											{
												"body": {
													"nativeSrc": "4949:51:6",
													"nodeType": "YulBlock",
													"src": "4949:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4966:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4966:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4987:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4987:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4971:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4971:15:6"
																		},
																		"nativeSrc": "4971:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4971:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4959:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4959:6:6"
																},
																"nativeSrc": "4959:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4959:35:6"
															},
															"nativeSrc": "4959:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4959:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4888:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4937:5:6",
														"nodeType": "YulTypedName",
														"src": "4937:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4944:3:6",
														"nodeType": "YulTypedName",
														"src": "4944:3:6",
														"type": ""
													}
												],
												"src": "4888:112:6"
											},
											{
												"body": {
													"nativeSrc": "5100:120:6",
													"nodeType": "YulBlock",
													"src": "5100:120:6",
													"statements": [
														{
															"nativeSrc": "5110:26:6",
															"nodeType": "YulAssignment",
															"src": "5110:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5122:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5122:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5133:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5133:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5118:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:6"
																},
																"nativeSrc": "5118:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5118:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5110:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5110:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5186:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5186:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5199:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5199:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5210:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5210:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5195:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5195:3:6"
																		},
																		"nativeSrc": "5195:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5195:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5146:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "5146:39:6"
																},
																"nativeSrc": "5146:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5146:67:6"
															},
															"nativeSrc": "5146:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5146:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5006:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5072:9:6",
														"nodeType": "YulTypedName",
														"src": "5072:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5084:6:6",
														"nodeType": "YulTypedName",
														"src": "5084:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5095:4:6",
														"nodeType": "YulTypedName",
														"src": "5095:4:6",
														"type": ""
													}
												],
												"src": "5006:214:6"
											},
											{
												"body": {
													"nativeSrc": "5292:263:6",
													"nodeType": "YulBlock",
													"src": "5292:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5338:83:6",
																"nodeType": "YulBlock",
																"src": "5338:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5340:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5340:77:6"
																			},
																			"nativeSrc": "5340:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5340:79:6"
																		},
																		"nativeSrc": "5340:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5340:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5313:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5322:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5322:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5309:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:6"
																		},
																		"nativeSrc": "5309:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5309:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5334:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5334:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5305:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5305:3:6"
																},
																"nativeSrc": "5305:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5305:32:6"
															},
															"nativeSrc": "5302:119:6",
															"nodeType": "YulIf",
															"src": "5302:119:6"
														},
														{
															"nativeSrc": "5431:117:6",
															"nodeType": "YulBlock",
															"src": "5431:117:6",
															"statements": [
																{
																	"nativeSrc": "5446:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5446:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5460:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5460:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5450:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5450:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:6"
																				},
																				"nativeSrc": "5506:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:6"
																		},
																		"nativeSrc": "5485:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5226:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5262:9:6",
														"nodeType": "YulTypedName",
														"src": "5262:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5273:7:6",
														"nodeType": "YulTypedName",
														"src": "5273:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5285:6:6",
														"nodeType": "YulTypedName",
														"src": "5285:6:6",
														"type": ""
													}
												],
												"src": "5226:329:6"
											},
											{
												"body": {
													"nativeSrc": "5589:152:6",
													"nodeType": "YulBlock",
													"src": "5589:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:6"
																},
																"nativeSrc": "5599:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:6"
															},
															"nativeSrc": "5599:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:6"
																},
																"nativeSrc": "5696:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:6"
															},
															"nativeSrc": "5696:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:6"
																},
																"nativeSrc": "5720:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:6"
															},
															"nativeSrc": "5720:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:6"
											},
											{
												"body": {
													"nativeSrc": "5798:269:6",
													"nodeType": "YulBlock",
													"src": "5798:269:6",
													"statements": [
														{
															"nativeSrc": "5808:22:6",
															"nodeType": "YulAssignment",
															"src": "5808:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:6"
																},
																"nativeSrc": "5818:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:6"
																}
															]
														},
														{
															"nativeSrc": "5839:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:6"
																},
																"nativeSrc": "5865:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:6",
																"nodeType": "YulBlock",
																"src": "5916:51:6",
																"statements": [
																	{
																		"nativeSrc": "5930:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:6"
																			},
																			"nativeSrc": "5940:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:6"
																},
																"nativeSrc": "5889:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:6"
															},
															"nativeSrc": "5886:81:6",
															"nodeType": "YulIf",
															"src": "5886:81:6"
														},
														{
															"body": {
																"nativeSrc": "6019:42:6",
																"nodeType": "YulBlock",
																"src": "6019:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:6"
																			},
																			"nativeSrc": "6033:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:6"
																		},
																		"nativeSrc": "6033:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:6"
																		},
																		"nativeSrc": "6003:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:6"
																},
																"nativeSrc": "5980:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:6"
															},
															"nativeSrc": "5977:84:6",
															"nodeType": "YulIf",
															"src": "5977:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:6",
														"nodeType": "YulTypedName",
														"src": "5782:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:6",
														"nodeType": "YulTypedName",
														"src": "5791:6:6",
														"type": ""
													}
												],
												"src": "5747:320:6"
											},
											{
												"body": {
													"nativeSrc": "6101:152:6",
													"nodeType": "YulBlock",
													"src": "6101:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6121:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6121:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6111:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6111:6:6"
																},
																"nativeSrc": "6111:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6111:88:6"
															},
															"nativeSrc": "6111:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6111:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6215:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6215:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6218:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6218:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:6"
																},
																"nativeSrc": "6208:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6208:15:6"
															},
															"nativeSrc": "6208:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6208:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6239:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6239:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6242:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6242:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6232:6:6"
																},
																"nativeSrc": "6232:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6232:15:6"
															},
															"nativeSrc": "6232:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6232:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6073:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6073:180:6"
											},
											{
												"body": {
													"nativeSrc": "6287:152:6",
													"nodeType": "YulBlock",
													"src": "6287:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6304:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6304:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6307:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6307:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6297:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:6"
																},
																"nativeSrc": "6297:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6297:88:6"
															},
															"nativeSrc": "6297:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6297:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6401:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6401:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6404:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6404:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6394:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:6"
																},
																"nativeSrc": "6394:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6394:15:6"
															},
															"nativeSrc": "6394:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6394:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6425:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6425:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6428:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6428:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6418:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6418:6:6"
																},
																"nativeSrc": "6418:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6418:15:6"
															},
															"nativeSrc": "6418:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6418:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6259:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6259:180:6"
											},
											{
												"body": {
													"nativeSrc": "6487:143:6",
													"nodeType": "YulBlock",
													"src": "6487:143:6",
													"statements": [
														{
															"nativeSrc": "6497:25:6",
															"nodeType": "YulAssignment",
															"src": "6497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6520:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6502:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6502:17:6"
																},
																"nativeSrc": "6502:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6502:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6497:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6497:1:6"
																}
															]
														},
														{
															"nativeSrc": "6531:25:6",
															"nodeType": "YulAssignment",
															"src": "6531:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6554:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6554:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6536:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6536:17:6"
																},
																"nativeSrc": "6536:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6536:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6531:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6531:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6578:22:6",
																"nodeType": "YulBlock",
																"src": "6578:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6580:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6580:16:6"
																			},
																			"nativeSrc": "6580:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6580:18:6"
																		},
																		"nativeSrc": "6580:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6580:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6575:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6575:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6568:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6568:6:6"
																},
																"nativeSrc": "6568:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6568:9:6"
															},
															"nativeSrc": "6565:35:6",
															"nodeType": "YulIf",
															"src": "6565:35:6"
														},
														{
															"nativeSrc": "6610:14:6",
															"nodeType": "YulAssignment",
															"src": "6610:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6619:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6619:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6622:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6622:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:6"
																},
																"nativeSrc": "6615:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6615:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6610:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6610:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6445:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6476:1:6",
														"nodeType": "YulTypedName",
														"src": "6476:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6479:1:6",
														"nodeType": "YulTypedName",
														"src": "6479:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6485:1:6",
														"nodeType": "YulTypedName",
														"src": "6485:1:6",
														"type": ""
													}
												],
												"src": "6445:185:6"
											},
											{
												"body": {
													"nativeSrc": "6684:362:6",
													"nodeType": "YulBlock",
													"src": "6684:362:6",
													"statements": [
														{
															"nativeSrc": "6694:25:6",
															"nodeType": "YulAssignment",
															"src": "6694:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6717:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6717:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6699:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6699:17:6"
																},
																"nativeSrc": "6699:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6699:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6694:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6694:1:6"
																}
															]
														},
														{
															"nativeSrc": "6728:25:6",
															"nodeType": "YulAssignment",
															"src": "6728:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6751:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6751:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6733:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6733:17:6"
																},
																"nativeSrc": "6733:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6733:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6728:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6728:1:6"
																}
															]
														},
														{
															"nativeSrc": "6762:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6762:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6785:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6785:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6788:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6788:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6781:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6781:3:6"
																},
																"nativeSrc": "6781:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6781:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6766:11:6",
																	"nodeType": "YulTypedName",
																	"src": "6766:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6799:41:6",
															"nodeType": "YulAssignment",
															"src": "6799:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6828:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "6828:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6810:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6810:17:6"
																},
																"nativeSrc": "6810:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6810:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6799:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6799:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7017:22:6",
																"nodeType": "YulBlock",
																"src": "7017:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7019:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7019:16:6"
																			},
																			"nativeSrc": "7019:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7019:18:6"
																		},
																		"nativeSrc": "7019:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7019:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6950:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6950:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6943:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6943:6:6"
																				},
																				"nativeSrc": "6943:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6943:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6973:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6973:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6980:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "6980:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6989:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "6989:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6976:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6976:3:6"
																						},
																						"nativeSrc": "6976:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6976:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6970:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6970:2:6"
																				},
																				"nativeSrc": "6970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6970:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6923:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6923:2:6"
																		},
																		"nativeSrc": "6923:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6923:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:6"
																},
																"nativeSrc": "6903:113:6",
																"nodeType": "YulFunctionCall",
																"src": "6903:113:6"
															},
															"nativeSrc": "6900:139:6",
															"nodeType": "YulIf",
															"src": "6900:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6636:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6667:1:6",
														"nodeType": "YulTypedName",
														"src": "6667:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6670:1:6",
														"nodeType": "YulTypedName",
														"src": "6670:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6676:7:6",
														"nodeType": "YulTypedName",
														"src": "6676:7:6",
														"type": ""
													}
												],
												"src": "6636:410:6"
											},
											{
												"body": {
													"nativeSrc": "7158:122:6",
													"nodeType": "YulBlock",
													"src": "7158:122:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7180:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7180:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7188:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7188:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7176:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:6"
																		},
																		"nativeSrc": "7176:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:14:6"
																	},
																	{
																		"hexValue": "5761726e696e673a20596f7520617265206e6f7420616c6c6f77656420746f20",
																		"kind": "string",
																		"nativeSrc": "7192:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7192:34:6",
																		"type": "",
																		"value": "Warning: You are not allowed to "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7169:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7169:6:6"
																},
																"nativeSrc": "7169:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7169:58:6"
															},
															"nativeSrc": "7169:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7169:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7248:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7248:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7256:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7256:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7244:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7244:3:6"
																		},
																		"nativeSrc": "7244:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7244:15:6"
																	},
																	{
																		"hexValue": "7472616e7366657221",
																		"kind": "string",
																		"nativeSrc": "7261:11:6",
																		"nodeType": "YulLiteral",
																		"src": "7261:11:6",
																		"type": "",
																		"value": "transfer!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7237:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7237:6:6"
																},
																"nativeSrc": "7237:36:6",
																"nodeType": "YulFunctionCall",
																"src": "7237:36:6"
															},
															"nativeSrc": "7237:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "7237:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d",
												"nativeSrc": "7052:228:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7150:6:6",
														"nodeType": "YulTypedName",
														"src": "7150:6:6",
														"type": ""
													}
												],
												"src": "7052:228:6"
											},
											{
												"body": {
													"nativeSrc": "7432:220:6",
													"nodeType": "YulBlock",
													"src": "7432:220:6",
													"statements": [
														{
															"nativeSrc": "7442:74:6",
															"nodeType": "YulAssignment",
															"src": "7442:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7508:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7508:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7513:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7513:2:6",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7449:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7449:58:6"
																},
																"nativeSrc": "7449:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7449:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7442:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7614:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7614:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d",
																	"nativeSrc": "7525:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7525:88:6"
																},
																"nativeSrc": "7525:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7525:93:6"
															},
															"nativeSrc": "7525:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7525:93:6"
														},
														{
															"nativeSrc": "7627:19:6",
															"nodeType": "YulAssignment",
															"src": "7627:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7638:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7638:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7643:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7643:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7634:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7634:3:6"
																},
																"nativeSrc": "7634:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7634:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7627:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7286:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7420:3:6",
														"nodeType": "YulTypedName",
														"src": "7420:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7428:3:6",
														"nodeType": "YulTypedName",
														"src": "7428:3:6",
														"type": ""
													}
												],
												"src": "7286:366:6"
											},
											{
												"body": {
													"nativeSrc": "7829:248:6",
													"nodeType": "YulBlock",
													"src": "7829:248:6",
													"statements": [
														{
															"nativeSrc": "7839:26:6",
															"nodeType": "YulAssignment",
															"src": "7839:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7851:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7851:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7862:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7862:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7847:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7847:3:6"
																},
																"nativeSrc": "7847:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7847:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7839:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7839:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7886:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7886:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7897:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7897:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nativeSrc": "7882:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7905:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7905:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7911:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7911:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7901:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:6"
																		},
																		"nativeSrc": "7901:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7901:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7875:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7875:6:6"
																},
																"nativeSrc": "7875:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7875:47:6"
															},
															"nativeSrc": "7875:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7875:47:6"
														},
														{
															"nativeSrc": "7931:139:6",
															"nodeType": "YulAssignment",
															"src": "7931:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8065:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8065:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7939:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7939:124:6"
																},
																"nativeSrc": "7939:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7939:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7931:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7931:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7658:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7809:9:6",
														"nodeType": "YulTypedName",
														"src": "7809:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7824:4:6",
														"nodeType": "YulTypedName",
														"src": "7824:4:6",
														"type": ""
													}
												],
												"src": "7658:419:6"
											},
											{
												"body": {
													"nativeSrc": "8127:147:6",
													"nodeType": "YulBlock",
													"src": "8127:147:6",
													"statements": [
														{
															"nativeSrc": "8137:25:6",
															"nodeType": "YulAssignment",
															"src": "8137:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8160:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8160:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8142:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8142:17:6"
																},
																"nativeSrc": "8142:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8142:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8137:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8137:1:6"
																}
															]
														},
														{
															"nativeSrc": "8171:25:6",
															"nodeType": "YulAssignment",
															"src": "8171:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8194:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8194:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8176:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8176:17:6"
																},
																"nativeSrc": "8176:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8176:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8171:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8171:1:6"
																}
															]
														},
														{
															"nativeSrc": "8205:16:6",
															"nodeType": "YulAssignment",
															"src": "8205:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8216:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8216:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8219:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8219:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8212:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8212:3:6"
																},
																"nativeSrc": "8212:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8212:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8205:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8205:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8245:22:6",
																"nodeType": "YulBlock",
																"src": "8245:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8247:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8247:16:6"
																			},
																			"nativeSrc": "8247:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8247:18:6"
																		},
																		"nativeSrc": "8247:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8247:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8237:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8237:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8240:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8240:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8234:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8234:2:6"
																},
																"nativeSrc": "8234:10:6",
																"nodeType": "YulFunctionCall",
																"src": "8234:10:6"
															},
															"nativeSrc": "8231:36:6",
															"nodeType": "YulIf",
															"src": "8231:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8083:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8114:1:6",
														"nodeType": "YulTypedName",
														"src": "8114:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8117:1:6",
														"nodeType": "YulTypedName",
														"src": "8117:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8123:3:6",
														"nodeType": "YulTypedName",
														"src": "8123:3:6",
														"type": ""
													}
												],
												"src": "8083:191:6"
											},
											{
												"body": {
													"nativeSrc": "8386:72:6",
													"nodeType": "YulBlock",
													"src": "8386:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8416:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8416:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8404:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8404:3:6"
																		},
																		"nativeSrc": "8404:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8404:14:6"
																	},
																	{
																		"hexValue": "5761726e696e673a20496e73756666696369656e74204d6f6e6b7321",
																		"kind": "string",
																		"nativeSrc": "8420:30:6",
																		"nodeType": "YulLiteral",
																		"src": "8420:30:6",
																		"type": "",
																		"value": "Warning: Insufficient Monks!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8397:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8397:6:6"
																},
																"nativeSrc": "8397:54:6",
																"nodeType": "YulFunctionCall",
																"src": "8397:54:6"
															},
															"nativeSrc": "8397:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "8397:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457",
												"nativeSrc": "8280:178:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8378:6:6",
														"nodeType": "YulTypedName",
														"src": "8378:6:6",
														"type": ""
													}
												],
												"src": "8280:178:6"
											},
											{
												"body": {
													"nativeSrc": "8610:220:6",
													"nodeType": "YulBlock",
													"src": "8610:220:6",
													"statements": [
														{
															"nativeSrc": "8620:74:6",
															"nodeType": "YulAssignment",
															"src": "8620:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8686:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8686:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8691:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8691:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8627:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8627:58:6"
																},
																"nativeSrc": "8627:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8627:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8620:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8620:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8792:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8792:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457",
																	"nativeSrc": "8703:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8703:88:6"
																},
																"nativeSrc": "8703:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8703:93:6"
															},
															"nativeSrc": "8703:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8703:93:6"
														},
														{
															"nativeSrc": "8805:19:6",
															"nodeType": "YulAssignment",
															"src": "8805:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8816:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8816:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8821:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8821:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8812:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8812:3:6"
																},
																"nativeSrc": "8812:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8812:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8805:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8805:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8464:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8598:3:6",
														"nodeType": "YulTypedName",
														"src": "8598:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8606:3:6",
														"nodeType": "YulTypedName",
														"src": "8606:3:6",
														"type": ""
													}
												],
												"src": "8464:366:6"
											},
											{
												"body": {
													"nativeSrc": "9007:248:6",
													"nodeType": "YulBlock",
													"src": "9007:248:6",
													"statements": [
														{
															"nativeSrc": "9017:26:6",
															"nodeType": "YulAssignment",
															"src": "9017:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9029:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9029:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9040:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9040:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9025:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9025:3:6"
																},
																"nativeSrc": "9025:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9025:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9017:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9017:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9064:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9064:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9075:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9075:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9060:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9060:3:6"
																		},
																		"nativeSrc": "9060:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9060:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9083:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9083:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9089:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9089:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9079:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9079:3:6"
																		},
																		"nativeSrc": "9079:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9079:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9053:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9053:6:6"
																},
																"nativeSrc": "9053:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9053:47:6"
															},
															"nativeSrc": "9053:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9053:47:6"
														},
														{
															"nativeSrc": "9109:139:6",
															"nodeType": "YulAssignment",
															"src": "9109:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9243:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9243:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9117:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9117:124:6"
																},
																"nativeSrc": "9117:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9117:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9109:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9109:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8836:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8987:9:6",
														"nodeType": "YulTypedName",
														"src": "8987:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9002:4:6",
														"nodeType": "YulTypedName",
														"src": "9002:4:6",
														"type": ""
													}
												],
												"src": "8836:419:6"
											},
											{
												"body": {
													"nativeSrc": "9326:53:6",
													"nodeType": "YulBlock",
													"src": "9326:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9343:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9343:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9366:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9366:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9348:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9348:17:6"
																		},
																		"nativeSrc": "9348:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9348:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9336:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9336:6:6"
																},
																"nativeSrc": "9336:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9336:37:6"
															},
															"nativeSrc": "9336:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9336:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9261:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9314:5:6",
														"nodeType": "YulTypedName",
														"src": "9314:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9321:3:6",
														"nodeType": "YulTypedName",
														"src": "9321:3:6",
														"type": ""
													}
												],
												"src": "9261:118:6"
											},
											{
												"body": {
													"nativeSrc": "9539:288:6",
													"nodeType": "YulBlock",
													"src": "9539:288:6",
													"statements": [
														{
															"nativeSrc": "9549:26:6",
															"nodeType": "YulAssignment",
															"src": "9549:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9561:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9561:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9572:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9557:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9557:3:6"
																},
																"nativeSrc": "9557:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9557:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9549:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9549:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9629:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9642:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9642:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9653:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9653:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9638:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9638:3:6"
																		},
																		"nativeSrc": "9638:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9638:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9585:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9585:43:6"
																},
																"nativeSrc": "9585:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9585:71:6"
															},
															"nativeSrc": "9585:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9585:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9710:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9710:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9723:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9723:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9734:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9734:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9719:3:6"
																		},
																		"nativeSrc": "9719:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9719:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9666:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9666:43:6"
																},
																"nativeSrc": "9666:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9666:72:6"
															},
															"nativeSrc": "9666:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9666:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9792:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9792:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9805:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9805:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9816:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9816:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9801:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:6"
																		},
																		"nativeSrc": "9801:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9748:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9748:43:6"
																},
																"nativeSrc": "9748:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9748:72:6"
															},
															"nativeSrc": "9748:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9748:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9385:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9495:9:6",
														"nodeType": "YulTypedName",
														"src": "9495:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9507:6:6",
														"nodeType": "YulTypedName",
														"src": "9507:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9515:6:6",
														"nodeType": "YulTypedName",
														"src": "9515:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9523:6:6",
														"nodeType": "YulTypedName",
														"src": "9523:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9534:4:6",
														"nodeType": "YulTypedName",
														"src": "9534:4:6",
														"type": ""
													}
												],
												"src": "9385:442:6"
											},
											{
												"body": {
													"nativeSrc": "9931:124:6",
													"nodeType": "YulBlock",
													"src": "9931:124:6",
													"statements": [
														{
															"nativeSrc": "9941:26:6",
															"nodeType": "YulAssignment",
															"src": "9941:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9953:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9953:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9949:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9949:3:6"
																},
																"nativeSrc": "9949:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9949:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9941:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9941:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10021:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10021:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10034:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10034:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10045:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10045:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10030:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10030:3:6"
																		},
																		"nativeSrc": "10030:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10030:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9977:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9977:43:6"
																},
																"nativeSrc": "9977:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9977:71:6"
															},
															"nativeSrc": "9977:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9977:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9833:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9903:9:6",
														"nodeType": "YulTypedName",
														"src": "9903:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9915:6:6",
														"nodeType": "YulTypedName",
														"src": "9915:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9926:4:6",
														"nodeType": "YulTypedName",
														"src": "9926:4:6",
														"type": ""
													}
												],
												"src": "9833:222:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Warning: You are not allowed to \")\n\n        mstore(add(memPtr, 32), \"transfer!\")\n\n    }\n\n    function abi_encode_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457(memPtr) {\n\n        mstore(add(memPtr, 0), \"Warning: Insufficient Monks!\")\n\n    }\n\n    function abi_encode_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fd575f3560e01c8063450bcf4011610094578063a9059cbb11610063578063a9059cbb14610363578063b16099671461039f578063d4721d68146103c9578063dd62ed3e146103f1578063f107079d1461042d576100fd565b8063450bcf401461029957806370a08231146102c157806395d89b41146102fd5780639f84709114610327576100fd565b80633042dbe8116100d05780633042dbe8146101cd57806330b67a9914610209578063313ce5671461024557806344f0f0681461026f576100fd565b806306fdde0314610101578063095ea7b31461012b57806318160ddd1461016757806323b872dd14610191575b5f80fd5b34801561010c575f80fd5b50610115610437565b6040516101229190610edf565b60405180910390f35b348015610136575f80fd5b50610151600480360381019061014c9190610f90565b6104c7565b60405161015e9190610fe8565b60405180910390f35b348015610172575f80fd5b5061017b6104e9565b6040516101889190611010565b60405180910390f35b34801561019c575f80fd5b506101b760048036038101906101b29190611029565b6104f2565b6040516101c49190610fe8565b60405180910390f35b3480156101d8575f80fd5b506101f360048036038101906101ee9190611079565b610520565b6040516102009190611010565b60405180910390f35b348015610214575f80fd5b5061022f600480360381019061022a9190610f90565b610546565b60405161023c9190610fe8565b60405180910390f35b348015610250575f80fd5b5061025961056c565b60405161026691906110d2565b60405180910390f35b34801561027a575f80fd5b50610283610574565b6040516102909190611010565b60405180910390f35b3480156102a4575f80fd5b506102bf60048036038101906102ba9190610f90565b610595565b005b3480156102cc575f80fd5b506102e760048036038101906102e291906110eb565b6105b7565b6040516102f49190611010565b60405180910390f35b348015610308575f80fd5b506103116105fc565b60405161031e9190610edf565b60405180910390f35b348015610332575f80fd5b5061034d600480360381019061034891906110eb565b61068c565b60405161035a9190611010565b60405180910390f35b34801561036e575f80fd5b5061038960048036038101906103849190610f90565b6106b0565b6040516103969190610fe8565b60405180910390f35b3480156103aa575f80fd5b506103b36106d2565b6040516103c09190611010565b60405180910390f35b3480156103d4575f80fd5b506103ef60048036038101906103ea9190611029565b6106f4565b005b3480156103fc575f80fd5b5061041760048036038101906104129190611079565b610776565b6040516104249190611010565b60405180910390f35b6104356107f8565b005b60606003805461044690611143565b80601f016020809104026020016040519081016040528092919081815260200182805461047290611143565b80156104bd5780601f10610494576101008083540402835291602001916104bd565b820191905f5260205f20905b8154815290600101906020018083116104a057829003601f168201915b5050505050905090565b5f806104d161086c565b90506104de818585610873565b600191505092915050565b5f600254905090565b5f806104fc61086c565b9050610509858285610885565b610514858585610918565b60019150509392505050565b5f670de0b6b3a76400006105348484610776565b61053e91906111cd565b905092915050565b5f61056483670de0b6b3a76400008461055f91906111fd565b6106b0565b905092915050565b5f6012905090565b5f670de0b6b3a76400006105866104e9565b61059091906111cd565b905090565b6105b282670de0b6b3a7640000836105ad91906111fd565b6104c7565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461060b90611143565b80601f016020809104026020016040519081016040528092919081815260200182805461063790611143565b80156106825780601f1061065957610100808354040283529160200191610682565b820191905f5260205f20905b81548152906001019060200180831161066557829003601f168201915b5050505050905090565b5f670de0b6b3a764000061069f836105b7565b6106a991906111cd565b9050919050565b5f806106ba61086c565b90506106c7818585610918565b600191505092915050565b5f670de0b6b3a76400006106e5336105b7565b6106ef91906111cd565b905090565b670de0b6b3a76400008161070891906111fd565b6107128433610776565b11610752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610749906112ae565b60405180910390fd5b6107708383670de0b6b3a76400008461076b91906111fd565b6104f2565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f6103e83461080791906111fd565b9050600554816108156104e9565b61081f91906112cc565b1061085f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085690611349565b60405180910390fd5b6108693382610a08565b50565b5f33905090565b6108808383836001610a87565b505050565b5f6108908484610776565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109125781811015610903578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108fa93929190611376565b60405180910390fd5b61091184848484035f610a87565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610988575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161097f91906113ab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f8575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109ef91906113ab565b60405180910390fd5b610a03838383610c56565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a78575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a6f91906113ab565b60405180910390fd5b610a835f8383610c56565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610af7575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610aee91906113ab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b67575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b5e91906113ab565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c50578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c479190611010565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ca6578060025f828254610c9a91906112cc565b92505081905550610d74565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d2f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d2693929190611376565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dbb578060025f8282540392505081905550610e05565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e629190611010565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610eb182610e6f565b610ebb8185610e79565b9350610ecb818560208601610e89565b610ed481610e97565b840191505092915050565b5f6020820190508181035f830152610ef78184610ea7565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f2c82610f03565b9050919050565b610f3c81610f22565b8114610f46575f80fd5b50565b5f81359050610f5781610f33565b92915050565b5f819050919050565b610f6f81610f5d565b8114610f79575f80fd5b50565b5f81359050610f8a81610f66565b92915050565b5f8060408385031215610fa657610fa5610eff565b5b5f610fb385828601610f49565b9250506020610fc485828601610f7c565b9150509250929050565b5f8115159050919050565b610fe281610fce565b82525050565b5f602082019050610ffb5f830184610fd9565b92915050565b61100a81610f5d565b82525050565b5f6020820190506110235f830184611001565b92915050565b5f805f606084860312156110405761103f610eff565b5b5f61104d86828701610f49565b935050602061105e86828701610f49565b925050604061106f86828701610f7c565b9150509250925092565b5f806040838503121561108f5761108e610eff565b5b5f61109c85828601610f49565b92505060206110ad85828601610f49565b9150509250929050565b5f60ff82169050919050565b6110cc816110b7565b82525050565b5f6020820190506110e55f8301846110c3565b92915050565b5f60208284031215611100576110ff610eff565b5b5f61110d84828501610f49565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061115a57607f821691505b60208210810361116d5761116c611116565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111d782610f5d565b91506111e283610f5d565b9250826111f2576111f1611173565b5b828204905092915050565b5f61120782610f5d565b915061121283610f5d565b925082820261122081610f5d565b91508282048414831517611237576112366111a0565b5b5092915050565b7f5761726e696e673a20596f7520617265206e6f7420616c6c6f77656420746f205f8201527f7472616e73666572210000000000000000000000000000000000000000000000602082015250565b5f611298602983610e79565b91506112a38261123e565b604082019050919050565b5f6020820190508181035f8301526112c58161128c565b9050919050565b5f6112d682610f5d565b91506112e183610f5d565b92508282019050808211156112f9576112f86111a0565b5b92915050565b7f5761726e696e673a20496e73756666696369656e74204d6f6e6b7321000000005f82015250565b5f611333601c83610e79565b915061133e826112ff565b602082019050919050565b5f6020820190508181035f83015261136081611327565b9050919050565b61137081610f22565b82525050565b5f6060820190506113895f830186611367565b6113966020830185611001565b6113a36040830184611001565b949350505050565b5f6020820190506113be5f830184611367565b9291505056fea2646970667358221220dfaadced6b7ee438ab182b9d32ee6a80cc0a437fa52974ee6e970897fd3d463164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x450BCF40 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB1609967 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xD4721D68 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF107079D EQ PUSH2 0x42D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x450BCF40 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x9F847091 EQ PUSH2 0x327 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x3042DBE8 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3042DBE8 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x30B67A99 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x44F0F068 EQ PUSH2 0x26F JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B3 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x472 SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x494 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D1 PUSH2 0x86C JUMP JUMPDEST SWAP1 POP PUSH2 0x4DE DUP2 DUP6 DUP6 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FC PUSH2 0x86C JUMP JUMPDEST SWAP1 POP PUSH2 0x509 DUP6 DUP3 DUP6 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x514 DUP6 DUP6 DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x534 DUP5 DUP5 PUSH2 0x776 JUMP JUMPDEST PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x564 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x586 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B2 DUP3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x60B SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x637 SWAP1 PUSH2 0x1143 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x682 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x659 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x682 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x665 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x69F DUP4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6BA PUSH2 0x86C JUMP JUMPDEST SWAP1 POP PUSH2 0x6C7 DUP2 DUP6 DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6E5 CALLER PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x712 DUP5 CALLER PUSH2 0x776 JUMP JUMPDEST GT PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x770 DUP4 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 CALLVALUE PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH2 0x815 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST LT PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x856 SWAP1 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x869 CALLER DUP3 PUSH2 0xA08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x880 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x890 DUP5 DUP5 PUSH2 0x776 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x912 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x903 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x911 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA87 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x988 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA03 DUP4 DUP4 DUP4 PUSH2 0xC56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA83 PUSH0 DUP4 DUP4 PUSH2 0xC56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB67 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5E SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC50 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD74 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD2F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD26 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE05 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 DUP3 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0xEBB DUP2 DUP6 PUSH2 0xE79 JUMP JUMPDEST SWAP4 POP PUSH2 0xECB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE89 JUMP JUMPDEST PUSH2 0xED4 DUP2 PUSH2 0xE97 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF7 DUP2 DUP5 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF2C DUP3 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3C DUP2 PUSH2 0xF22 JUMP JUMPDEST DUP2 EQ PUSH2 0xF46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF57 DUP2 PUSH2 0xF33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xF5D JUMP JUMPDEST DUP2 EQ PUSH2 0xF79 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8A DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB3 DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFC4 DUP6 DUP3 DUP7 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE2 DUP2 PUSH2 0xFCE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFFB PUSH0 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xF5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1023 PUSH0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1040 JUMPI PUSH2 0x103F PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x104D DUP7 DUP3 DUP8 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x105E DUP7 DUP3 DUP8 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x106F DUP7 DUP3 DUP8 ADD PUSH2 0xF7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x108F JUMPI PUSH2 0x108E PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109C DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10AD DUP6 DUP3 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1100 JUMPI PUSH2 0x10FF PUSH2 0xEFF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x110D DUP5 DUP3 DUP6 ADD PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x115A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x116D JUMPI PUSH2 0x116C PUSH2 0x1116 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D7 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP PUSH2 0x11E2 DUP4 PUSH2 0xF5D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11F2 JUMPI PUSH2 0x11F1 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1207 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP PUSH2 0x1212 DUP4 PUSH2 0xF5D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1220 DUP2 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1237 JUMPI PUSH2 0x1236 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5761726E696E673A20596F7520617265206E6F7420616C6C6F77656420746F20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616E73666572210000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1298 PUSH1 0x29 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A3 DUP3 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C5 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D6 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP2 POP PUSH2 0x12E1 DUP4 PUSH2 0xF5D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12F9 JUMPI PUSH2 0x12F8 PUSH2 0x11A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5761726E696E673A20496E73756666696369656E74204D6F6E6B732100000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1333 PUSH1 0x1C DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x133E DUP3 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1360 DUP2 PUSH2 0x1327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1370 DUP2 PUSH2 0xF22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1389 PUSH0 DUP4 ADD DUP7 PUSH2 0x1367 JUMP JUMPDEST PUSH2 0x1396 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x13A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BE PUSH0 DUP4 ADD DUP5 PUSH2 0x1367 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xAA 0xDC 0xED PUSH12 0x7EE438AB182B9D32EE6A80CC EXP NUMBER PUSH32 0xA52974EE6E970897FD3D463164736F6C634300081A0033000000000000000000 ",
							"sourceMap": "171:2779:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:91:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4110:190;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2919:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4910:249;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2595:161:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1419:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2770:84:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2827:120:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2269:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3081:118:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1107:129:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3404:182:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;853:121:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1785:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3649:142:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:202:2;;;:::i;:::-;;1817:91:0;1862:13;1895:5;1888:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:91;:::o;4110:190::-;4183:4;4200:13;4216:12;:10;:12::i;:::-;4200:28;;4239:31;4248:5;4255:7;4264:5;4239:8;:31::i;:::-;4288:4;4281:11;;;4110:190;;;;:::o;2919:99::-;2971:7;2998:12;;2991:19;;2919:99;:::o;4910:249::-;4997:4;5014:15;5032:12;:10;:12::i;:::-;5014:30;;5055:37;5071:4;5077:7;5086:5;5055:15;:37::i;:::-;5103:26;5113:4;5119:2;5123:5;5103:9;:26::i;:::-;5147:4;5140:11;;;4910:249;;;;;:::o;2595:161:2:-;2675:7;2729:19;2702:24;2712:4;2718:7;2702:9;:24::i;:::-;:46;;;;:::i;:::-;2695:53;;2595:161;;;;:::o;1419:153::-;1492:4;1516:48;1525:9;1544:19;1536:5;:27;;;;:::i;:::-;1516:8;:48::i;:::-;1509:55;;1419:153;;;;:::o;2770:84:0:-;2819:5;2844:2;2837:9;;2770:84;:::o;2827:120:2:-;2877:7;2920:19;2904:13;:11;:13::i;:::-;:35;;;;:::i;:::-;2897:42;;2827:120;:::o;2269:129::-;2345:45;2353:9;2370:19;2364:3;:25;;;;:::i;:::-;2345:7;:45::i;:::-;;2269:129;;:::o;3081:118:0:-;3146:7;3173:9;:18;3183:7;3173:18;;;;;;;;;;;;;;;;3166:25;;3081:118;;;:::o;2027:95::-;2074:13;2107:7;2100:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:95;:::o;1107:129:2:-;1164:7;1209:19;1191:15;1201:4;1191:9;:15::i;:::-;:37;;;;:::i;:::-;1184:44;;1107:129;;;:::o;3404:182:0:-;3473:4;3490:13;3506:12;:10;:12::i;:::-;3490:28;;3529:27;3539:5;3546:2;3550:5;3529:9;:27::i;:::-;3574:4;3567:11;;;3404:182;;;;:::o;853:121:2:-;896:7;947:19;923:21;933:10;923:9;:21::i;:::-;:43;;;;:::i;:::-;916:50;;853:121;:::o;1785:261::-;1913:19;1907:3;:25;;;;:::i;:::-;1877:27;1887:4;1893:10;1877:9;:27::i;:::-;:55;1869:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1989:49;2002:4;2008:2;2018:19;2012:3;:25;;;;:::i;:::-;1989:12;:49::i;:::-;;1785:261;;;:::o;3649:142:0:-;3729:7;3756:11;:18;3768:5;3756:18;;;;;;;;;;;;;;;:27;3775:7;3756:27;;;;;;;;;;;;;;;;3749:34;;3649:142;;;;:::o;550:202:2:-;596:11;622:4;610:9;:16;;;;:::i;:::-;596:30;;667:11;;661:3;645:13;:11;:13::i;:::-;:19;;;;:::i;:::-;:33;637:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;722:22;728:10;740:3;722:5;:22::i;:::-;585:167;550:202::o;672:98:5:-;725:7;752:10;745:17;;672:98;:::o;8969:130:0:-;9054:37;9063:5;9070:7;9079:5;9086:4;9054:8;:37::i;:::-;8969:130;;;:::o;10701:486::-;10801:24;10828:25;10838:5;10845:7;10828:9;:25::i;:::-;10801:52;;10887:17;10868:16;:36;10864:316;;;10944:5;10925:16;:24;10921:132;;;11004:7;11013:16;11031:5;10977:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10921:132;11096:57;11105:5;11112:7;11140:5;11121:16;:24;11147:5;11096:8;:57::i;:::-;10864:316;10790:397;10701:486;;;:::o;5544:308::-;5644:1;5628:18;;:4;:18;;;5624:88;;5697:1;5670:30;;;;;;;;;;;:::i;:::-;;;;;;;;5624:88;5740:1;5726:16;;:2;:16;;;5722:88;;5795:1;5766:32;;;;;;;;;;;:::i;:::-;;;;;;;;5722:88;5820:24;5828:4;5834:2;5838:5;5820:7;:24::i;:::-;5544:308;;;:::o;7664:213::-;7754:1;7735:21;;:7;:21;;;7731:93;;7809:1;7780:32;;;;;;;;;;;:::i;:::-;;;;;;;;7731:93;7834:35;7850:1;7854:7;7863:5;7834:7;:35::i;:::-;7664:213;;:::o;9966:443::-;10096:1;10079:19;;:5;:19;;;10075:91;;10151:1;10122:32;;;;;;;;;;;:::i;:::-;;;;;;;;10075:91;10199:1;10180:21;;:7;:21;;;10176:92;;10253:1;10225:31;;;;;;;;;;;:::i;:::-;;;;;;;;10176:92;10308:5;10278:11;:18;10290:5;10278:18;;;;;;;;;;;;;;;:27;10297:7;10278:27;;;;;;;;;;;;;;;:35;;;;10328:9;10324:78;;;10375:7;10359:31;;10368:5;10359:31;;;10384:5;10359:31;;;;;;:::i;:::-;;;;;;;;10324:78;9966:443;;;;:::o;6176:1135::-;6282:1;6266:18;;:4;:18;;;6262:552;;6420:5;6404:12;;:21;;;;;;;:::i;:::-;;;;;;;;6262:552;;;6458:19;6480:9;:15;6490:4;6480:15;;;;;;;;;;;;;;;;6458:37;;6528:5;6514:11;:19;6510:117;;;6586:4;6592:11;6605:5;6561:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6510:117;6782:5;6768:11;:19;6750:9;:15;6760:4;6750:15;;;;;;;;;;;;;;;:37;;;;6443:371;6262:552;6844:1;6830:16;;:2;:16;;;6826:435;;7012:5;6996:12;;:21;;;;;;;;;;;6826:435;;;7229:5;7212:9;:13;7222:2;7212:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6826:435;7293:2;7278:25;;7287:4;7278:25;;;7297:5;7278:25;;;;;;:::i;:::-;;;;;;;;6176:1135;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:474::-;4384:6;4392;4441:2;4429:9;4420:7;4416:23;4412:32;4409:119;;;4447:79;;:::i;:::-;4409:119;4567:1;4592:53;4637:7;4628:6;4617:9;4613:22;4592:53;:::i;:::-;4582:63;;4538:117;4694:2;4720:53;4765:7;4756:6;4745:9;4741:22;4720:53;:::i;:::-;4710:63;;4665:118;4316:474;;;;;:::o;4796:86::-;4831:7;4871:4;4864:5;4860:16;4849:27;;4796:86;;;:::o;4888:112::-;4971:22;4987:5;4971:22;:::i;:::-;4966:3;4959:35;4888:112;;:::o;5006:214::-;5095:4;5133:2;5122:9;5118:18;5110:26;;5146:67;5210:1;5199:9;5195:17;5186:6;5146:67;:::i;:::-;5006:214;;;;:::o;5226:329::-;5285:6;5334:2;5322:9;5313:7;5309:23;5305:32;5302:119;;;5340:79;;:::i;:::-;5302:119;5460:1;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5431:117;5226:329;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:180::-;6121:77;6118:1;6111:88;6218:4;6215:1;6208:15;6242:4;6239:1;6232:15;6259:180;6307:77;6304:1;6297:88;6404:4;6401:1;6394:15;6428:4;6425:1;6418:15;6445:185;6485:1;6502:20;6520:1;6502:20;:::i;:::-;6497:25;;6536:20;6554:1;6536:20;:::i;:::-;6531:25;;6575:1;6565:35;;6580:18;;:::i;:::-;6565:35;6622:1;6619;6615:9;6610:14;;6445:185;;;;:::o;6636:410::-;6676:7;6699:20;6717:1;6699:20;:::i;:::-;6694:25;;6733:20;6751:1;6733:20;:::i;:::-;6728:25;;6788:1;6785;6781:9;6810:30;6828:11;6810:30;:::i;:::-;6799:41;;6989:1;6980:7;6976:15;6973:1;6970:22;6950:1;6943:9;6923:83;6900:139;;7019:18;;:::i;:::-;6900:139;6684:362;6636:410;;;;:::o;7052:228::-;7192:34;7188:1;7180:6;7176:14;7169:58;7261:11;7256:2;7248:6;7244:15;7237:36;7052:228;:::o;7286:366::-;7428:3;7449:67;7513:2;7508:3;7449:67;:::i;:::-;7442:74;;7525:93;7614:3;7525:93;:::i;:::-;7643:2;7638:3;7634:12;7627:19;;7286:366;;;:::o;7658:419::-;7824:4;7862:2;7851:9;7847:18;7839:26;;7911:9;7905:4;7901:20;7897:1;7886:9;7882:17;7875:47;7939:131;8065:4;7939:131;:::i;:::-;7931:139;;7658:419;;;:::o;8083:191::-;8123:3;8142:20;8160:1;8142:20;:::i;:::-;8137:25;;8176:20;8194:1;8176:20;:::i;:::-;8171:25;;8219:1;8216;8212:9;8205:16;;8240:3;8237:1;8234:10;8231:36;;;8247:18;;:::i;:::-;8231:36;8083:191;;;;:::o;8280:178::-;8420:30;8416:1;8408:6;8404:14;8397:54;8280:178;:::o;8464:366::-;8606:3;8627:67;8691:2;8686:3;8627:67;:::i;:::-;8620:74;;8703:93;8792:3;8703:93;:::i;:::-;8821:2;8816:3;8812:12;8805:19;;8464:366;;;:::o;8836:419::-;9002:4;9040:2;9029:9;9025:18;9017:26;;9089:9;9083:4;9079:20;9075:1;9064:9;9060:17;9053:47;9117:131;9243:4;9117:131;:::i;:::-;9109:139;;8836:419;;;:::o;9261:118::-;9348:24;9366:5;9348:24;:::i;:::-;9343:3;9336:37;9261:118;;:::o;9385:442::-;9534:4;9572:2;9561:9;9557:18;9549:26;;9585:71;9653:1;9642:9;9638:17;9629:6;9585:71;:::i;:::-;9666:72;9734:2;9723:9;9719:18;9710:6;9666:72;:::i;:::-;9748;9816:2;9805:9;9801:18;9792:6;9748:72;:::i;:::-;9385:442;;;;;;:::o;9833:222::-;9926:4;9964:2;9953:9;9949:18;9941:26;;9977:71;10045:1;10034:9;10030:17;10021:6;9977:71;:::i;:::-;9833:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1022800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"checkMonkAllowance(address,address)": "infinite",
								"checkMonks()": "infinite",
								"checkMonksOf(address)": "infinite",
								"currentMonkSupply()": "infinite",
								"decimals()": "405",
								"getMonks()": "infinite",
								"giveMonkApproval(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferMonks(address,uint256)": "infinite",
								"transferMonksFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 171,
									"end": 2950,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 490,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 490,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 385,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 385,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "4D4F4E4B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "PUSH",
									"source": 0,
									"value": "4D4B000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1706,
									"end": 1711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1703,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1698,
									"end": 1711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1711,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1732,
									"end": 1739,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1722,
									"end": 1739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1722,
									"end": 1739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1631,
									"end": 1747,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 418,
									"end": 428,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 410,
									"end": 415,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 410,
									"end": 415,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 428,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 410,
									"end": 428,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 410,
									"end": 428,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 410,
									"end": 428,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 410,
									"end": 428,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 453,
									"end": 482,
									"name": "PUSH",
									"source": 2,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 439,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 439,
									"end": 482,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 439,
									"end": 482,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 439,
									"end": 482,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 439,
									"end": 482,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 2950,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfaadced6b7ee438ab182b9d32ee6a80cc0a437fa52974ee6e970897fd3d463164736f6c634300081a0033",
									".code": [
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "450BCF40"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "B1609967"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "D4721D68"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "F107079D"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "450BCF40"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "9F847091"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "3042DBE8"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "3042DBE8"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "30B67A99"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "44F0F068"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 2950,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1817,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1817,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4110,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4110,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4110,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2919,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2919,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4910,
											"end": 5159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4910,
											"end": 5159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4910,
											"end": 5159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2595,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2595,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2595,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1419,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1419,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1419,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2770,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2770,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2827,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2827,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2269,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2269,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3081,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3081,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3081,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2027,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1107,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1107,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1107,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3404,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3404,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3404,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 853,
											"end": 974,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 853,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 853,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1785,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1785,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3649,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3649,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 550,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 550,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 550,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 550,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 550,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 550,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 752,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1895,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1888,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1888,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4216,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4216,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4248,
											"end": 4253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4269,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4239,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4270,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4239,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4281,
											"end": 4292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2971,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 3018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4997,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5032,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5032,
											"end": 5044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5014,
											"end": 5044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5071,
											"end": 5075,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5091,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5055,
											"end": 5092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5092,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5055,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5113,
											"end": 5117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5121,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5103,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5129,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5103,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5147,
											"end": 5151,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 5159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2748,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2702,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2712,
											"end": 2716,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2725,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2702,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2726,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2702,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2702,
											"end": 2748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2702,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2748,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2702,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 2756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1563,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1536,
											"end": 1563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1536,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1563,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1536,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1516,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1564,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1516,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2904,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2904,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2904,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2904,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2904,
											"end": 2939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2389,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2364,
											"end": 2367,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2364,
											"end": 2389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2364,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2389,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2364,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2345,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2390,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2345,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2100,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2100,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1191,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1191,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1206,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1191,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1191,
											"end": 1228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1191,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1228,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1191,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3506,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3506,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3555,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3529,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3529,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 974,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 853,
											"end": 974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 896,
											"end": 903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 966,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 923,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 933,
											"end": 943,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 923,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 923,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 923,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 923,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 923,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 923,
											"end": 966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 923,
											"end": 966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 923,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 923,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 923,
											"end": 966,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 923,
											"end": 966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 853,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1932,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1907,
											"end": 1910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1907,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1887,
											"end": 1891,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1903,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1877,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1877,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1932,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1869,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1869,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2002,
											"end": 2006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2018,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2012,
											"end": 2015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2012,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2012,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1989,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2038,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1989,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 2046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3773,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3749,
											"end": 3783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3749,
											"end": 3783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 550,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 596,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 610,
											"end": 619,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 610,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 610,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 610,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 610,
											"end": 626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 610,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 610,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 596,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 596,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 661,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 645,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 645,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 658,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 645,
											"end": 658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 645,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 645,
											"end": 664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 645,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 664,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 645,
											"end": 664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 637,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 637,
											"end": 711,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 637,
											"end": 711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 728,
											"end": 738,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 740,
											"end": 743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 722,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 722,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 744,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 722,
											"end": 744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 585,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 550,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 672,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 672,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 745,
											"end": 762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 745,
											"end": 762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8969,
											"end": 9099,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8969,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9063,
											"end": 9068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9070,
											"end": 9077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9079,
											"end": 9084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9054,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9054,
											"end": 9091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9091,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9054,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 11187,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10701,
											"end": 11187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10838,
											"end": 10843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10845,
											"end": 10852,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10828,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10828,
											"end": 10853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10868,
											"end": 10884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10904,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10864,
											"end": 11180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10864,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 10864,
											"end": 11180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10944,
											"end": 10949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10925,
											"end": 10941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10925,
											"end": 10949,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 11053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 10921,
											"end": 11053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11004,
											"end": 11011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11013,
											"end": 11029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 10977,
											"end": 11037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 11037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 11053,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 10921,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11105,
											"end": 11110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11112,
											"end": 11119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11145,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11147,
											"end": 11152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11096,
											"end": 11153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11153,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11096,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10864,
											"end": 11180,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 10864,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10790,
											"end": 11187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 11187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 11187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 11187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 11187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5544,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5628,
											"end": 5632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5624,
											"end": 5712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5670,
											"end": 5700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5712,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5624,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5726,
											"end": 5742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5726,
											"end": 5742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5722,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5722,
											"end": 5810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5766,
											"end": 5798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5722,
											"end": 5810,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5722,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5828,
											"end": 5832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5820,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5844,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5820,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7877,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7664,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7754,
											"end": 7755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7735,
											"end": 7756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7735,
											"end": 7756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7731,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7731,
											"end": 7824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7809,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7780,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7731,
											"end": 7824,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7731,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7850,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 7834,
											"end": 7869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7869,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7834,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 10409,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9966,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10079,
											"end": 10098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10079,
											"end": 10084,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10079,
											"end": 10098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10079,
											"end": 10098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10079,
											"end": 10098,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10075,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10075,
											"end": 10166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 10122,
											"end": 10154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10154,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10075,
											"end": 10166,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10075,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10180,
											"end": 10187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10176,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10176,
											"end": 10268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 10225,
											"end": 10256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10176,
											"end": 10268,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10176,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10308,
											"end": 10313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10295,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10297,
											"end": 10304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10375,
											"end": 10382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10373,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10384,
											"end": 10389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 10359,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 10324,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 10409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 10409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 10409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 10409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 10409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6176,
											"end": 7311,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6176,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6416,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6404,
											"end": 6416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6404,
											"end": 6425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6528,
											"end": 6533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6533,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6510,
											"end": 6627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6586,
											"end": 6590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 6561,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6561,
											"end": 6611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6510,
											"end": 6627,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6510,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6760,
											"end": 6764,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6787,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6262,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6830,
											"end": 6846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6830,
											"end": 6846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6826,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7278,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7278,
											"end": 7303,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6176,
											"end": 7311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6176,
											"end": 7311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6176,
											"end": 7311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6176,
											"end": 7311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4790,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4316,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4427,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4439,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4444,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4528,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 4409,
											"end": 4528,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4447,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4447,
											"end": 4526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4526,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4447,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4528,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 4409,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4637,
											"end": 4644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4592,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4765,
											"end": 4772,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4762,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4720,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4720,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4773,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4882,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4796,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 4875,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4864,
											"end": 4869,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4876,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 5000,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4888,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4987,
											"end": 4992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4971,
											"end": 4993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4959,
											"end": 4994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 5000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 5000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5220,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5006,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5136,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5210,
											"end": 5211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5208,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5212,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5192,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5146,
											"end": 5213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5213,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5146,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5220,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5555,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5226,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5337,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5302,
											"end": 5421,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5340,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5340,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5419,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5340,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5421,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5302,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5555,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6253,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6073,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6198,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6222,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6215,
											"end": 6216,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6242,
											"end": 6246,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6239,
											"end": 6240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6439,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6259,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6384,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6404,
											"end": 6408,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6394,
											"end": 6409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6433,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6630,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6445,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6502,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6522,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6502,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6554,
											"end": 6555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6536,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6536,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6565,
											"end": 6600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6580,
											"end": 6598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6600,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6565,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6624,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6630,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6630,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 7046,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6636,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6699,
											"end": 6719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6733,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6753,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6733,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6753,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6781,
											"end": 6790,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6828,
											"end": 6839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 6810,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6840,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6810,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6799,
											"end": 6840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6799,
											"end": 6840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 6990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 6987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6991,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6970,
											"end": 6992,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 6951,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 7006,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6900,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6900,
											"end": 7039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7019,
											"end": 7037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6900,
											"end": 7039,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6900,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 7046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 7046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 7046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 7046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 7046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 7046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7280,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7052,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7192,
											"end": 7226,
											"name": "PUSH",
											"source": 6,
											"value": "5761726E696E673A20596F7520617265206E6F7420616C6C6F77656420746F20"
										},
										{
											"begin": 7188,
											"end": 7189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7190,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7169,
											"end": 7227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "7472616E73666572210000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7256,
											"end": 7258,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7244,
											"end": 7259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7273,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7513,
											"end": 7515,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 7508,
											"end": 7511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7449,
											"end": 7516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7614,
											"end": 7617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7525,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7643,
											"end": 7645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7638,
											"end": 7641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7824,
											"end": 7828,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7860,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 7909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 7922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 8065,
											"end": 8069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7939,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 8070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 8070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8274,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8083,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8123,
											"end": 8126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8142,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 8142,
											"end": 8162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8142,
											"end": 8162,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8142,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8194,
											"end": 8195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 8176,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8196,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8176,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8196,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8205,
											"end": 8221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8240,
											"end": 8243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8244,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8231,
											"end": 8267,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8231,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 8231,
											"end": 8267,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8247,
											"end": 8265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8231,
											"end": 8267,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 8231,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8274,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8280,
											"end": 8458,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8280,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8450,
											"name": "PUSH",
											"source": 6,
											"value": "5761726E696E673A20496E73756666696369656E74204D6F6E6B732100000000"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8404,
											"end": 8418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8397,
											"end": 8451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8280,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8280,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8830,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 8464,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 8691,
											"end": 8693,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 8686,
											"end": 8689,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8627,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8627,
											"end": 8694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8627,
											"end": 8694,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 8627,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 8792,
											"end": 8795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8703,
											"end": 8796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 8703,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8816,
											"end": 8819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8812,
											"end": 8824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 9255,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8836,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9002,
											"end": 9006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9042,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9029,
											"end": 9038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9089,
											"end": 9098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9083,
											"end": 9087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9099,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9075,
											"end": 9076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9073,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9053,
											"end": 9100,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9243,
											"end": 9247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 9117,
											"end": 9248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9248,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9117,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9109,
											"end": 9248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9109,
											"end": 9248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 9255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 9255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 9255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 9255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9261,
											"end": 9379,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9261,
											"end": 9379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9348,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9366,
											"end": 9371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9348,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 9348,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9348,
											"end": 9372,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9348,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9373,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9261,
											"end": 9379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9261,
											"end": 9379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9261,
											"end": 9379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9572,
											"end": 9574,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9561,
											"end": 9570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 9653,
											"end": 9654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9642,
											"end": 9651,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9585,
											"end": 9656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9656,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 9585,
											"end": 9656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9666,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9734,
											"end": 9736,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9723,
											"end": 9732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9719,
											"end": 9737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9666,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9666,
											"end": 9738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9666,
											"end": 9738,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9666,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9816,
											"end": 9818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9805,
											"end": 9814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9798,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9748,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 9820,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9748,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 10055,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9833,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9926,
											"end": 9930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9953,
											"end": 9962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 9967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9941,
											"end": 9967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9941,
											"end": 9967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9977,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10045,
											"end": 10046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10034,
											"end": 10043,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10021,
											"end": 10027,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9977,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9977,
											"end": 10048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9977,
											"end": 10048,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 9977,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 10055,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 10055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 10055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 10055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 10055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20.sol",
								"contracts/IERC20.sol",
								"contracts/Monk.sol",
								"contracts/extensions/IERC20Metadata.sol",
								"contracts/extensions/IERC6093.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkMonkAllowance(address,address)": "3042dbe8",
							"checkMonks()": "b1609967",
							"checkMonksOf(address)": "9f847091",
							"currentMonkSupply()": "44f0f068",
							"decimals()": "313ce567",
							"getMonks()": "f107079d",
							"giveMonkApproval(address,uint256)": "450bcf40",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferMonks(address,uint256)": "30b67a99",
							"transferMonksFrom(address,address,uint256)": "d4721d68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"checkMonkAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMonks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkMonksOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonkSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMonks\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"giveMonkApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferMonks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transferMonksFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Monk is the ERC20 token used for Monkey Brothers\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkMonkAllowance(address,address)\":{\"details\":\"Check allowance given to spender by the user\",\"params\":{\"spender\":\"Address of the spender of the Monks\",\"user\":\"Address of the owner of the Monks\"}},\"checkMonks()\":{\"details\":\"Getter for amount of Monks held by the caller of the function\"},\"checkMonksOf(address)\":{\"details\":\"Getter for amount of Monks held by an address\",\"params\":{\"user\":\"Address of user of interest\"}},\"constructor\":{\"details\":\"Sets the values for owner of the contract and supply limit\"},\"currentMonkSupply()\":{\"details\":\"Track current total Monk supply\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getMonks()\":{\"details\":\"Mints Monks with ETH\"},\"giveMonkApproval(address,uint256)\":{\"details\":\"Give an address approval to transfer a specified amount of Monks\",\"params\":{\"amt\":\"Amount of Monks to be approved to the address\",\"recipient\":\"Address to be given approval\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferMonks(address,uint256)\":{\"details\":\"Transfer Monks from function caller to recipient\",\"params\":{\"recipient\":\"Address of recipient\",\"value\":\"Amount of Monks to transfer\"}},\"transferMonksFrom(address,address,uint256)\":{\"details\":\"Transfer Monks from an address to another address\",\"params\":{\"amt\":\"Amount of Monks to transfer\",\"from\":\"Address of sender\",\"to\":\"Address of recipient\"}}},\"title\":\"Monk\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Monk.sol\":\"Monk\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xcb1217f4704c78ca1ab427365d02d3ac328b8214296c72034decad9c8b309e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcdbe3bc4811f401e6d9ea73a9156819b2340b71d5a392b20b4e80d3d3dfe2e1\",\"dweb:/ipfs/QmbWDnKhu5Ki3t4qRt75VtUmXia5bM2tfWLqrVxbtFqTZd\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x07a0f490fb568d855f744f8a8ed8b68b523c28c64e230e9816921ade79cf1b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://727deb9ceacb88c9c6d0e69120965d33c3fd96e7e04818f8bf099c5ac7714cfb\",\"dweb:/ipfs/QmR1HA8s3UgC82Wmu7dPjrHzXschsoDHqwyuDJTRtxey4D\"]},\"contracts/Monk.sol\":{\"keccak256\":\"0x89f70328f49f71ad4c72af768671f3b5a58dae99093f27a8165edfdb7843de12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://208cad5339b86ac4b519829bb4e56411d9a22a3f8b459f2c109f4e1f5c57d167\",\"dweb:/ipfs/Qmd1EXCexcL74TJSCqTr74ajZi5bv7cErsL2duggNNQop4\"]},\"contracts/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xa2df86d1c45d3de3dc5a17f00bc956b9f4bebdd0d81d974f71fd4e2b5523a2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b069590eba176e9c5c8f46536e44ccf53f6ac572b7fd8ef9f700b9affdd37cf1\",\"dweb:/ipfs/QmX1REaUcDPpySSt6yCxgZAX3NhHnoZ8wMkHxPrc6bNkLz\"]},\"contracts/extensions/IERC6093.sol\":{\"keccak256\":\"0x44a20c8f55f317f1f72a8073b7aff8906a4fb67e0432e7c00f64caaf234de936\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0dd61fbb79fd9593bcd53e7d100165fce97dacdc93cbe3bc42d8c1023f3c238\",\"dweb:/ipfs/QmWYeyMXK4rqGzKUMN5gBdXByFrrYMaY8azu45bmeddn4C\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/Monk.sol:Monk",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 28,
								"contract": "contracts/Monk.sol:Monk",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 30,
								"contract": "contracts/Monk.sol:Monk",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "contracts/Monk.sol:Monk",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 34,
								"contract": "contracts/Monk.sol:Monk",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 602,
								"contract": "contracts/Monk.sol:Monk",
								"label": "supplyLimit",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 604,
								"contract": "contracts/Monk.sol:Monk",
								"label": "currentSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 606,
								"contract": "contracts/Monk.sol:Monk",
								"label": "owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x07a0f490fb568d855f744f8a8ed8b68b523c28c64e230e9816921ade79cf1b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://727deb9ceacb88c9c6d0e69120965d33c3fd96e7e04818f8bf099c5ac7714cfb\",\"dweb:/ipfs/QmR1HA8s3UgC82Wmu7dPjrHzXschsoDHqwyuDJTRtxey4D\"]},\"contracts/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xa2df86d1c45d3de3dc5a17f00bc956b9f4bebdd0d81d974f71fd4e2b5523a2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b069590eba176e9c5c8f46536e44ccf53f6ac572b7fd8ef9f700b9affdd37cf1\",\"dweb:/ipfs/QmX1REaUcDPpySSt6yCxgZAX3NhHnoZ8wMkHxPrc6bNkLz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/extensions/IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extensions/IERC6093.sol\":{\"keccak256\":\"0x44a20c8f55f317f1f72a8073b7aff8906a4fb67e0432e7c00f64caaf234de936\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0dd61fbb79fd9593bcd53e7d100165fce97dacdc93cbe3bc42d8c1023f3c238\",\"dweb:/ipfs/QmWYeyMXK4rqGzKUMN5gBdXByFrrYMaY8azu45bmeddn4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extensions/IERC6093.sol\":{\"keccak256\":\"0x44a20c8f55f317f1f72a8073b7aff8906a4fb67e0432e7c00f64caaf234de936\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0dd61fbb79fd9593bcd53e7d100165fce97dacdc93cbe3bc42d8c1023f3c238\",\"dweb:/ipfs/QmWYeyMXK4rqGzKUMN5gBdXByFrrYMaY8azu45bmeddn4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extensions/IERC6093.sol\":{\"keccak256\":\"0x44a20c8f55f317f1f72a8073b7aff8906a4fb67e0432e7c00f64caaf234de936\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0dd61fbb79fd9593bcd53e7d100165fce97dacdc93cbe3bc42d8c1023f3c238\",\"dweb:/ipfs/QmWYeyMXK4rqGzKUMN5gBdXByFrrYMaY8azu45bmeddn4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							969
						],
						"ERC20": [
							514
						],
						"IERC20": [
							592
						],
						"IERC20Errors": [
							844
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 593,
							"src": "136:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 592,
										"src": "144:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 803,
							"src": "174:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 802,
										"src": "182:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "./utils/Context.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 970,
							"src": "239:44:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 969,
										"src": "247:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/extensions/IERC6093.sol",
							"file": "./extensions/IERC6093.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 940,
							"src": "285:55:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "293:12:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Context",
										"nameLocations": [
											"1147:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "1147:7:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1147:7:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC20",
										"nameLocations": [
											"1156:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 592,
										"src": "1156:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "1156:6:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1164:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 802,
										"src": "1164:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "1164:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "IERC20Errors",
										"nameLocations": [
											"1180:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "1180:12:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "1180:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "344:774:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								844,
								802,
								592,
								969
							],
							"name": "ERC20",
							"nameLocation": "1138:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1244:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1200:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 21,
										"keyName": "account",
										"keyNameLocation": "1216:7:0",
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1200:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1227:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1334:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1262:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 27,
										"keyName": "account",
										"keyNameLocation": "1278:7:0",
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1270:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1262:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"keyName": "spender",
											"keyNameLocation": "1305:7:0",
											"keyType": {
												"id": 24,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1297:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1289:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 25,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1316:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1370:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1354:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 29,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1354:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1406:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1391:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 31,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1391:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1433:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 514,
									"src": "1418:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 33,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1418:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1687:60:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 42,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1698:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 43,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1698:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "1698:13:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1722:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 47,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "1732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1722:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1722:17:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1449:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1657:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1643:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 36,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1643:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1664:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 38,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:44:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:0:0"
									},
									"scope": 514,
									"src": "1631:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										789
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1877:31:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "1895:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "1888:12:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1755:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1826:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1830:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1862:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 54,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1862:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:15:0"
									},
									"scope": 514,
									"src": "1817:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "2089:33:0",
										"statements": [
											{
												"expression": {
													"id": 66,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "2107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 65,
												"id": 67,
												"nodeType": "Return",
												"src": "2100:14:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1916:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2036:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2074:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:15:0"
									},
									"scope": 514,
									"src": "2027:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										801
									],
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "2826:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2844:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "2837:9:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2130:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2779:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2787:2:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2819:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:7:0"
									},
									"scope": 514,
									"src": "2770:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2980:38:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "2998:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2991:19:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2862:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2928:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2939:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2970:9:0"
									},
									"scope": 514,
									"src": "2919:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										549
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "3155:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 95,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "3173:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 97,
													"indexExpression": {
														"id": 96,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "3183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3173:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 94,
												"id": 98,
												"nodeType": "Return",
												"src": "3166:25:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3026:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3090:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3108:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3100:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3099:17:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:9:0"
									},
									"scope": 514,
									"src": "3081:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										559
									],
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3479:107:0",
										"statements": [
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3498:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "3490:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 110,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3490:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 112,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "3506:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3506:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3490:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 116,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 118,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "3550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 115,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "3529:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3529:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "3529:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3574:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 109,
												"id": 122,
												"nodeType": "Return",
												"src": "3567:11:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "3207:191:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3413:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3430:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3422:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3442:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3434:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3421:27:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3473:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:6:0"
									},
									"scope": 514,
									"src": "3404:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										569
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "3738:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "3756:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3756:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3756:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "3749:34:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3594:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3658:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3676:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3668:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3729:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3728:9:0"
									},
									"scope": 514,
									"src": "3649:142:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "4189:111:0",
										"statements": [
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4208:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "4200:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 151,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4200:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 153,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "4216:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4216:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4200:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4248:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4264:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 156,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															405,
															465
														],
														"referencedDeclaration": 405,
														"src": "4239:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4239:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "4239:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4288:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 150,
												"id": 163,
												"nodeType": "Return",
												"src": "4281:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "3799:305:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4119:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4135:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4127:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4152:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4144:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4126:32:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4183:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:6:0"
									},
									"scope": 514,
									"src": "4110:190:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										591
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "5003:156:0",
										"statements": [
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5022:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 196,
														"src": "5014:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 177,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5014:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 179,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "5032:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5032:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5014:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 183,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5071:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 184,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "5077:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5086:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "5055:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5055:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5055:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5113:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5119:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5123:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 188,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "5103:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5103:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "5103:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5147:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 176,
												"id": 195,
												"nodeType": "Return",
												"src": "5140:11:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "4308:596:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4919:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4940:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "4932:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4954:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "4946:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4966:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "4958:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4931:41:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "4997:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4997:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4996:6:0"
									},
									"scope": 514,
									"src": "4910:249:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "5613:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 207,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "5628:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5644:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5636:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 208,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5636:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5636:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5628:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 221,
												"nodeType": "IfStatement",
												"src": "5624:88:0",
												"trueBody": {
													"id": 220,
													"nodeType": "Block",
													"src": "5648:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5697:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5689:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 214,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5689:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5689:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 213,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "5670:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5670:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 219,
															"nodeType": "RevertStatement",
															"src": "5663:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "5726:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5740:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5732:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5732:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5726:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "IfStatement",
												"src": "5722:88:0",
												"trueBody": {
													"id": 235,
													"nodeType": "Block",
													"src": "5744:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5795:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5787:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 229,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5787:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5787:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 228,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "5766:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5766:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 234,
															"nodeType": "RevertStatement",
															"src": "5759:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5828:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "5834:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 240,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "5838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "5820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5820:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "5820:24:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "5167:371:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5553:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5571:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5563:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5585:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5577:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5597:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "5589:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5562:41:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5613:0:0"
									},
									"scope": 514,
									"src": "5544:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "6251:1060:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "6266:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6282:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 255,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6274:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6274:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6266:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "6443:371:0",
													"statements": [
														{
															"assignments": [
																266
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 266,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6466:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 291,
																	"src": "6458:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 265,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6458:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 270,
															"initialValue": {
																"baseExpression": {
																	"id": 267,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "6480:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"id": 268,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "6490:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6480:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6458:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 271,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "6514:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "6528:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6514:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 281,
															"nodeType": "IfStatement",
															"src": "6510:117:0",
															"trueBody": {
																"id": 280,
																"nodeType": "Block",
																"src": "6535:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 275,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 247,
																					"src": "6586:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 276,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 266,
																					"src": "6592:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 277,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 251,
																					"src": "6605:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 274,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "6561:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6561:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 279,
																		"nodeType": "RevertStatement",
																		"src": "6554:57:0"
																	}
																]
															}
														},
														{
															"id": 290,
															"nodeType": "UncheckedBlock",
															"src": "6641:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 282,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "6750:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 284,
																			"indexExpression": {
																				"id": 283,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 247,
																				"src": "6760:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6750:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 285,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "6768:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 286,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 251,
																				"src": "6782:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6768:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6750:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 289,
																	"nodeType": "ExpressionStatement",
																	"src": "6750:37:0"
																}
															]
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6262:552:0",
												"trueBody": {
													"id": 264,
													"nodeType": "Block",
													"src": "6286:151:0",
													"statements": [
														{
															"expression": {
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 260,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "6404:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 261,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "6420:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6404:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 263,
															"nodeType": "ExpressionStatement",
															"src": "6404:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "6830:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6844:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 294,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6836:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6836:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6830:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7050:211:0",
													"statements": [
														{
															"id": 311,
															"nodeType": "UncheckedBlock",
															"src": "7065:185:0",
															"statements": [
																{
																	"expression": {
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 305,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "7212:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 307,
																			"indexExpression": {
																				"id": 306,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "7222:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7212:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 308,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 251,
																			"src": "7229:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7212:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 310,
																	"nodeType": "ExpressionStatement",
																	"src": "7212:22:0"
																}
															]
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "6826:435:0",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "6848:196:0",
													"statements": [
														{
															"id": 303,
															"nodeType": "UncheckedBlock",
															"src": "6863:170:0",
															"statements": [
																{
																	"expression": {
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 299,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 30,
																			"src": "6996:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 251,
																			"src": "7012:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6996:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 302,
																	"nodeType": "ExpressionStatement",
																	"src": "6996:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 315,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7287:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7293:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7297:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "7278:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7278:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "EmitStatement",
												"src": "7273:30:0"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "5860:310:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6185:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6215:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6207:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6192:41:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6251:0:0"
									},
									"scope": 514,
									"src": "6176:1135:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "7720:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 329,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "7735:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 330,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7746:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7746:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7735:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "7731:93:0",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "7758:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7809:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7801:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 336,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7801:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7801:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 335,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "7780:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7780:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 341,
															"nodeType": "RevertStatement",
															"src": "7773:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7850:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7842:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7842:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7842:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "7854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "7863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "7834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7834:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "7834:35:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "7319:339:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7673:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7687:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7679:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7704:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7696:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7678:32:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7720:0:0"
									},
									"scope": 514,
									"src": "7664:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "8261:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "8276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8295:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8287:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 363,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8287:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8287:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8276:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "8272:91:0",
												"trueBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "8299:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8348:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8340:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 369,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8340:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8340:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 368,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "8321:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8321:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 374,
															"nodeType": "RevertStatement",
															"src": "8314:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8398:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8390:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8390:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8390:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8402:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 377,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "8373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8373:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "8373:35:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "7885:314:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8214:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8228:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "8220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8245:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "8237:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8219:32:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8261:0:0"
									},
									"scope": 514,
									"src": "8205:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "9043:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "9070:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "9079:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9086:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 397,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															405,
															465
														],
														"referencedDeclaration": 465,
														"src": "9054:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9054:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "9054:37:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "8424:539:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8978:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "8987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9010:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "9002:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "9019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8986:47:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9043:0:0"
									},
									"scope": 514,
									"src": "8969:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "10064:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "10079:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10088:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10088:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10079:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "10075:91:0",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "10100:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10151:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10143:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10143:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10143:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "10122:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10122:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "10115:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 432,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "10180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10199:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 433,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10191:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10191:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10180:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "10176:92:0",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "10203:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10253:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10245:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 439,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10245:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10245:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "10225:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10225:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "10218:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 447,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "10278:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 450,
															"indexExpression": {
																"id": 448,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "10290:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10278:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 451,
														"indexExpression": {
															"id": 449,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "10297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10278:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 452,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "10308:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10278:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "10278:35:0"
											},
											{
												"condition": {
													"id": 455,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 414,
													"src": "10328:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "10324:78:0",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "10339:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 457,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "10368:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 458,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "10375:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 459,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "10384:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 456,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "10359:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10359:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "EmitStatement",
															"src": "10354:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "9107:853:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9975:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9992:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "9984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "9999:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10024:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "10016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10036:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "10031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10031:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9983:63:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10064:0:0"
									},
									"scope": 514,
									"src": "9966:443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10790:397:0",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10809:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "10801:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [
														{
															"id": 478,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "10838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "10845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 477,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10828:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10828:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10801:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "10868:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10892:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 484,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10892:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 483,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10887:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10887:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10901:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10887:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10868:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "IfStatement",
												"src": "10864:316:0",
												"trueBody": {
													"id": 510,
													"nodeType": "Block",
													"src": "10906:274:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 489,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "10925:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "10944:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10925:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 499,
															"nodeType": "IfStatement",
															"src": "10921:132:0",
															"trueBody": {
																"id": 498,
																"nodeType": "Block",
																"src": "10951:102:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 493,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "11004:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 494,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 476,
																					"src": "11013:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 495,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "11031:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 492,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "10977:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10977:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 497,
																		"nodeType": "RevertStatement",
																		"src": "10970:67:0"
																	}
																]
															}
														},
														{
															"id": 509,
															"nodeType": "UncheckedBlock",
															"src": "11067:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 501,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "11105:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 502,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 470,
																				"src": "11112:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 503,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 476,
																					"src": "11121:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 504,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "11140:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11121:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11147:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 500,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				405,
																				465
																			],
																			"referencedDeclaration": 465,
																			"src": "11096:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11096:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 508,
																	"nodeType": "ExpressionStatement",
																	"src": "11096:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "10417:278:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10710:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10766:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10758:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10725:47:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:0"
									},
									"scope": 514,
									"src": "10701:486:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 515,
							"src": "1120:10070:0",
							"usedErrors": [
								814,
								819,
								824,
								833,
								838,
								843
							],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "108:11082:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							592
						]
					},
					"id": 593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "137:73:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IERC20",
							"nameLocation": "222:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "236:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 526,
									"name": "Transfer",
									"nameLocation": "411:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "420:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "458:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "442:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "470:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "462:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:57:1"
									},
									"src": "405:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "485:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 535,
									"name": "Approval",
									"nameLocation": "648:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "673:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "657:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "696:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "680:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "713:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "705:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:63:1"
									},
									"src": "642:78:1"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "728:67:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "810:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:2:1"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "847:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:1"
									},
									"scope": 592,
									"src": "801:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "864:73:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "962:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:1"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1002:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:1"
									},
									"scope": 592,
									"src": "943:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1019:219:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1270:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:27:1"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1307:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1307:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1306:6:1"
									},
									"scope": 592,
									"src": "1244:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "1321:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1606:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1639:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1631:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:32:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1671:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1670:9:1"
									},
									"scope": 592,
									"src": "1597:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1688:681:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2384:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2400:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2392:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2417:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2409:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:32:1"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2442:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2442:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:6:1"
									},
									"scope": 592,
									"src": "2375:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2456:305:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2776:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2797:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2789:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2811:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2803:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2823:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2815:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:41:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2848:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2848:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2847:6:1"
									},
									"scope": 592,
									"src": "2767:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 593,
							"src": "212:2645:1",
							"usedErrors": [],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "109:2748:1"
				},
				"id": 1
			},
			"contracts/Monk.sol": {
				"ast": {
					"absolutePath": "contracts/Monk.sol",
					"exportedSymbols": {
						"Context": [
							969
						],
						"ERC20": [
							514
						],
						"IERC20": [
							592
						],
						"IERC20Errors": [
							844
						],
						"IERC20Metadata": [
							802
						],
						"Monk": [
							776
						]
					},
					"id": 777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 777,
							"sourceUnit": 515,
							"src": "61:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "4d4f4e4b",
											"id": 598,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "194:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_e73678e1723d012f375a7fa9c38fb78e3cfce5c4e82e361640543120707b1b5a",
												"typeString": "literal_string \"MONK\""
											},
											"value": "MONK"
										},
										{
											"hexValue": "4d4b",
											"id": 599,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "202:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_00a7e6bbdea95b6e13eea42f71485c8fb3e3bb5c11a15230fad273c0ced989df",
												"typeString": "literal_string \"MK\""
											},
											"value": "MK"
										}
									],
									"baseName": {
										"id": 597,
										"name": "ERC20",
										"nameLocations": [
											"188:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 514,
										"src": "188:5:2"
									},
									"id": 600,
									"nodeType": "InheritanceSpecifier",
									"src": "188:19:2"
								}
							],
							"canonicalName": "Monk",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 596,
								"nodeType": "StructuredDocumentation",
								"src": "87:82:2",
								"text": " @title Monk\n @dev Monk is the ERC20 token used for Monkey Brothers"
							},
							"fullyImplemented": true,
							"id": 776,
							"linearizedBaseContracts": [
								776,
								514,
								844,
								802,
								592,
								969
							],
							"name": "Monk",
							"nameLocation": "180:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 602,
									"mutability": "mutable",
									"name": "supplyLimit",
									"nameLocation": "223:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 776,
									"src": "215:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 601,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 604,
									"mutability": "mutable",
									"name": "currentSupply",
									"nameLocation": "249:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 776,
									"src": "241:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 603,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "241:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 606,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "277:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 776,
									"src": "269:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 605,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "399:91:2",
										"statements": [
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 610,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "410:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 611,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "422:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "418:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "410:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "410:18:2"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 615,
														"name": "supplyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "439:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000"
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "453:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030303030303030303030303030303030",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "463:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1000000000000000000"
														},
														"src": "453:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000"
														}
													},
													"src": "439:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "439:43:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "295:84:2",
										"text": " @dev Sets the values for owner of the contract and supply limit"
									},
									"id": 622,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:2:2"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:0:2"
									},
									"scope": 776,
									"src": "385:105:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "585:167:2",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "604:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "596:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 628,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "610:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "614:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "610:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "622:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "610:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "596:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 634,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "645:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "645:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 636,
																	"name": "amt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "661:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "645:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 638,
																"name": "supplyLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "667:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "645:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5761726e696e673a20496e73756666696369656e74204d6f6e6b7321",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "680:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457",
																"typeString": "literal_string \"Warning: Insufficient Monks!\""
															},
															"value": "Warning: Insufficient Monks!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eee6959824af14d1aaecf6356154043868e635338ed8188ecc9c8447dcd0f457",
																"typeString": "literal_string \"Warning: Insufficient Monks!\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "637:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "637:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "637:74:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 644,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "728:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "732:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "728:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "740:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "722:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "722:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "722:22:2"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "498:46:2",
										"text": " @dev Mints Monks with ETH"
									},
									"functionSelector": "f107079d",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMonks",
									"nameLocation": "559:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:2"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "585:0:2"
									},
									"scope": 776,
									"src": "550:202:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "905:69:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 657,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "933:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "937:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "933:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 656,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "923:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "923:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030303030303030303030303030303030",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "947:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1000000000000000000"
													},
													"src": "923:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 655,
												"id": 662,
												"nodeType": "Return",
												"src": "916:50:2"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "760:87:2",
										"text": " @dev Getter for amount of Monks held by the caller of the function"
									},
									"functionSelector": "b1609967",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkMonks",
									"nameLocation": "862:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:2:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "896:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:9:2"
									},
									"scope": 776,
									"src": "853:121:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "1173:63:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 673,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1201:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 672,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1191:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1191:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030303030303030303030303030303030",
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1209:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1000000000000000000"
													},
													"src": "1191:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 671,
												"id": 677,
												"nodeType": "Return",
												"src": "1184:44:2"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "982:119:2",
										"text": " @dev Getter for amount of Monks held by an address\n @param user Address of user of interest"
									},
									"functionSelector": "9f847091",
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkMonksOf",
									"nameLocation": "1116:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1137:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1129:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:14:2"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1164:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1163:9:2"
									},
									"scope": 776,
									"src": "1107:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1498:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "1525:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 691,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "1536:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31303030303030303030303030303030303030",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1544:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1000000000000000000"
															},
															"src": "1536:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1516:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1516:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 688,
												"id": 695,
												"nodeType": "Return",
												"src": "1509:55:2"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "1244:169:2",
										"text": " @dev Transfer Monks from function caller to recipient\n @param recipient Address of recipient\n @param value Amount of Monks to transfer"
									},
									"functionSelector": "30b67a99",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferMonks",
									"nameLocation": "1428:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1450:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1442:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1469:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1461:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:34:2"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:2"
									},
									"scope": 776,
									"src": "1419:153:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "1858:188:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 709,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 700,
																		"src": "1887:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 710,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1893:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1897:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1893:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "1877:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1877:27:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 713,
																	"name": "amt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "1907:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1913:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "1907:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1877:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5761726e696e673a20596f7520617265206e6f7420616c6c6f77656420746f207472616e7366657221",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1934:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d",
																"typeString": "literal_string \"Warning: You are not allowed to transfer!\""
															},
															"value": "Warning: You are not allowed to transfer!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_564d91ff3f22f463c1740afcbf1136940fa9ec589388afee18d70c6884b28b5d",
																"typeString": "literal_string \"Warning: You are not allowed to transfer!\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1869:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:109:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "1869:109:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 721,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "2002:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "2008:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 723,
																"name": "amt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "2012:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31303030303030303030303030303030303030",
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2018:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1000000000000000000"
															},
															"src": "2012:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 720,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1989:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1989:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "1989:49:2"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1580:199:2",
										"text": " @dev Transfer Monks from an address to another address\n @param from Address of sender\n @param to Address of recipient\n @param amt Amount of Monks to transfer"
									},
									"functionSelector": "d4721d68",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferMonksFrom",
									"nameLocation": "1794:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1820:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1812:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1834:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1826:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "1846:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1838:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:39:2"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1858:0:2"
									},
									"scope": 776,
									"src": "1785:261:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "2334:64:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "2353:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "amt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "2364:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31303030303030303030303030303030303030",
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2370:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1000000000000000000"
															},
															"src": "2364:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2345:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2345:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "2345:45:2"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "2054:209:2",
										"text": " @dev Give an address approval to transfer a specified amount of Monks\n @param recipient Address to be given approval\n @param amt Amount of Monks to be approved to the address"
									},
									"functionSelector": "450bcf40",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveMonkApproval",
									"nameLocation": "2278:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2303:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2295:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "2322:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2314:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:32:2"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:2"
									},
									"scope": 776,
									"src": "2269:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "2684:72:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 756,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "2712:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 757,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "2718:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 755,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2702:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view returns (uint256)"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2702:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030303030303030303030303030303030",
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2729:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1000000000000000000"
													},
													"src": "2702:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 761,
												"nodeType": "Return",
												"src": "2695:53:2"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "2406:183:2",
										"text": " @dev Check allowance given to spender by the user\n @param user Address of the owner of the Monks\n @param spender Address of the spender of the Monks"
									},
									"functionSelector": "3042dbe8",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkMonkAllowance",
									"nameLocation": "2604:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2631:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2623:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2637:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:31:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2675:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:9:2"
									},
									"scope": 776,
									"src": "2595:161:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "2886:61:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 769,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "2904:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2904:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030303030303030303030303030303030",
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2920:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1000000000000000000"
													},
													"src": "2904:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 768,
												"id": 773,
												"nodeType": "Return",
												"src": "2897:42:2"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "2764:57:2",
										"text": " @dev Track current total Monk supply"
									},
									"functionSelector": "44f0f068",
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentMonkSupply",
									"nameLocation": "2836:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:2:2"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "2877:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:9:2"
									},
									"scope": 776,
									"src": "2827:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 777,
							"src": "171:2779:2",
							"usedErrors": [
								814,
								819,
								824,
								833,
								838,
								843
							],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "33:2917:2"
				},
				"id": 2
			},
			"contracts/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							592
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:3"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 803,
							"sourceUnit": 593,
							"src": "156:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 779,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 592,
										"src": "164:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 782,
										"name": "IERC20",
										"nameLocations": [
											"316:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 592,
										"src": "316:6:3"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 781,
								"nodeType": "StructuredDocumentation",
								"src": "197:89:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 802,
							"linearizedBaseContracts": [
								802,
								592
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:3"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "431:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:3"
									},
									"scope": 802,
									"src": "392:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "559:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:3"
									},
									"scope": 802,
									"src": "518:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "698:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 798,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:3"
									},
									"scope": 802,
									"src": "655:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 803,
							"src": "288:420:3",
							"usedErrors": [],
							"usedEvents": [
								526,
								535
							]
						}
					],
					"src": "128:580:3"
				},
				"id": 3
			},
			"contracts/extensions/IERC6093.sol": {
				"ast": {
					"absolutePath": "contracts/extensions/IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							939
						],
						"IERC20Errors": [
							844
						],
						"IERC721Errors": [
							892
						]
					},
					"id": 940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 805,
								"nodeType": "StructuredDocumentation",
								"src": "142:144:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "IERC20Errors",
							"nameLocation": "298:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "318:314:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 814,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "644:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "677:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "669:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "693:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "685:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "710:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "702:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:49:4"
									},
									"src": "638:80:4"
								},
								{
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "726:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 819,
									"name": "ERC20InvalidSender",
									"nameLocation": "893:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "920:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "912:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:16:4"
									},
									"src": "887:41:4"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "936:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 824,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1110:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1139:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1131:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:18:4"
									},
									"src": "1104:45:4"
								},
								{
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1157:350:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 833,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1519:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1554:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1546:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1571:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1563:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1590:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1582:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:52:4"
									},
									"src": "1513:85:4"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "1606:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 838,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1795:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1824:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1816:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1815:18:4"
									},
									"src": "1789:45:4"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "1842:198:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 843,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2052:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2080:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2072:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2071:17:4"
									},
									"src": "2046:43:4"
								}
							],
							"scope": 940,
							"src": "288:1804:4",
							"usedErrors": [
								814,
								819,
								824,
								833,
								838,
								843
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 845,
								"nodeType": "StructuredDocumentation",
								"src": "2096:146:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 892,
							"linearizedBaseContracts": [
								892
							],
							"name": "IERC721Errors",
							"nameLocation": "2254:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "2275:223:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 850,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2510:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2537:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2529:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:15:4"
									},
									"src": "2504:40:4"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "2552:135:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 855,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2699:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2730:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "2722:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2722:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2721:17:4"
									},
									"src": "2693:46:4"
								},
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "2747:294:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 864,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3053:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3082:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3074:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3098:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3090:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3090:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3115:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "3107:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:48:4"
									},
									"src": "3047:75:4"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "3130:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 869,
									"name": "ERC721InvalidSender",
									"nameLocation": "3297:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3325:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "3317:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:16:4"
									},
									"src": "3291:42:4"
								},
								{
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "3341:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 874,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3515:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3545:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3537:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:18:4"
									},
									"src": "3509:46:4"
								},
								{
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "3563:251:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 881,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3826:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3861:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "3853:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3879:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "3871:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3852:35:4"
									},
									"src": "3820:68:4"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "3896:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 886,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4085:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4115:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4107:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4106:18:4"
									},
									"src": "4079:46:4"
								},
								{
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "4133:200:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 891,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4345:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4375:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4367:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4366:18:4"
									},
									"src": "4339:46:4"
								}
							],
							"scope": 940,
							"src": "2244:2144:4",
							"usedErrors": [
								850,
								855,
								864,
								869,
								874,
								881,
								886,
								891
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "4392:148:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 939,
							"linearizedBaseContracts": [
								939
							],
							"name": "IERC1155Errors",
							"nameLocation": "4552:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "4574:367:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 904,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4953:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4988:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4980:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5004:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "4996:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4996:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5021:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5013:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5037:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5029:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4979:66:4"
									},
									"src": "4947:99:4"
								},
								{
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "5054:155:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 909,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5221:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5250:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "5242:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:16:4"
									},
									"src": "5215:43:4"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "5266:162:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 914,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5440:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5471:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "5463:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5463:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:18:4"
									},
									"src": "5434:47:4"
								},
								{
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "5489:260:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 921,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5761:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5798:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5790:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5816:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5808:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:33:4"
									},
									"src": "5755:68:4"
								},
								{
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "5831:177:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 926,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6020:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6051:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "6043:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6042:18:4"
									},
									"src": "6014:47:4"
								},
								{
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "6069:200:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 931,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6281:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6312:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6304:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6304:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6303:18:4"
									},
									"src": "6275:47:4"
								},
								{
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "6330:285:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 938,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6627:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6661:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6653:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6680:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6672:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6672:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:41:4"
									},
									"src": "6621:73:4"
								}
							],
							"scope": 940,
							"src": "4542:2155:4",
							"usedErrors": [
								904,
								909,
								914,
								921,
								926,
								931,
								938
							],
							"usedEvents": []
						}
					],
					"src": "114:6583:4"
				},
				"id": 4
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							969
						]
					},
					"id": 970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 941,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 942,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 969,
							"linearizedBaseContracts": [
								969
							],
							"name": "Context",
							"nameLocation": "657:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "734:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 947,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 946,
												"id": 949,
												"nodeType": "Return",
												"src": "745:17:5"
											}
										]
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "725:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:5"
									},
									"scope": 969,
									"src": "672:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "845:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 956,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 955,
												"id": 958,
												"nodeType": "Return",
												"src": "856:15:5"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "829:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:5"
									},
									"scope": 969,
									"src": "778:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "959:27:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 964,
												"id": 966,
												"nodeType": "Return",
												"src": "970:8:5"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:5"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "950:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:5"
									},
									"scope": 969,
									"src": "887:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 970,
							"src": "639:350:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:885:5"
				},
				"id": 5
			}
		}
	}
}